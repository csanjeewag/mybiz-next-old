{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _this = this;\n\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Head from 'next/head';\nimport Layout from '../../layouts/MainLayout';\nimport SubNavbar from '../../layouts/SubNavbar';\nimport Footer from '../../components/Footer';\nimport Errorpage from './../../layouts/error';\nimport $ from 'jquery';\nimport { Url, ImageUrl, myshopmUrl, wesitename, WebUrl } from './../../constant/main';\nimport Link from 'next/link';\nimport Cookie from \"js-cookie\";\n\nvar Imageside = function Imageside(props) {\n  return __jsx(\"div\", {\n    className: \"jsx-3443398829\" + \" \" + \"col-lg-6 col-sm-12\"\n  }, __jsx(\"div\", {\n    id: \"carouselExampleIndicators\",\n    \"data-ride\": \"carousel\",\n    className: \"jsx-3443398829\" + \" \" + \"carousel slide\"\n  }, __jsx(\"ol\", {\n    className: \"jsx-3443398829\" + \" \" + \"carousel-indicators\"\n  }, props.item.images.map(function (x, i) {\n    return __jsx(\"li\", {\n      key: i,\n      \"data-target\": \"#carouselExampleIndicators\",\n      \"data-slide-to\": i,\n      className: \"jsx-3443398829\" + \" \" + ((i == 0 ? 'active' : 'c') || \"\")\n    });\n  })), __jsx(\"div\", {\n    className: \"jsx-3443398829\" + \" \" + \"carousel-inner\"\n  }, props.item.images.map(function (x, i) {\n    return __jsx(\"div\", {\n      key: i,\n      className: \"jsx-3443398829\" + \" \" + ((i == 0 ? 'carousel-item active' : 'carousel-item') || \"\")\n    }, __jsx(\"img\", {\n      src: ImageUrl + x,\n      alt: \"first slide\",\n      width: \"100%\",\n      className: \"jsx-3443398829\" + \" \" + \"d-block w-100 silde2image\"\n    }));\n  })), __jsx(\"a\", {\n    href: \"#carouselExampleIndicators\",\n    role: \"button\",\n    \"data-slide\": \"prev\",\n    className: \"jsx-3443398829\" + \" \" + \"carousel-control-prev\"\n  }, __jsx(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: \"jsx-3443398829\" + \" \" + \"carousel-control-prev-icon\"\n  }), __jsx(\"span\", {\n    className: \"jsx-3443398829\" + \" \" + \"sr-only\"\n  }, \"Previous\")), __jsx(\"a\", {\n    href: \"#carouselExampleIndicators\",\n    role: \"button\",\n    \"data-slide\": \"next\",\n    className: \"jsx-3443398829\" + \" \" + \"carousel-control-next\"\n  }, __jsx(\"span\", {\n    \"aria-hidden\": \"true\",\n    className: \"jsx-3443398829\" + \" \" + \"carousel-control-next-icon\"\n  }), __jsx(\"span\", {\n    className: \"jsx-3443398829\" + \" \" + \"sr-only\"\n  }, \"Next\"))), __jsx(\"div\", {\n    className: \"jsx-3443398829\" + \" \" + \"card-footer\"\n  }, __jsx(\"small\", {\n    className: \"jsx-3443398829\" + \" \" + \"font3 card-footer-button\"\n  }, props.item.createDate), __jsx(\"button\", {\n    onClick: props.addtocart.bind(_this, props.item._id, props.item.itemname),\n    className: \"jsx-3443398829\" + \" \" + \"btn btn-danger float-right btn-sm fontsizeE-9\"\n  }, __jsx(\"img\", {\n    src: \"https://img.icons8.com/ios/25/ffffff/favorite-cart.png\",\n    className: \"jsx-3443398829\"\n  }), \" \\xA0 Add to Cart\"), __jsx(\"button\", {\n    onClick: props.addtocart.bind(_this, props.item._id, props.item.itemname),\n    className: \"jsx-3443398829\" + \" \" + \"btn btn-primary float-right btn-sm fontsizeE-9\"\n  }, __jsx(\"img\", {\n    src: \"https://img.icons8.com/ios/25/ffffff/in-transit.png\",\n    className: \"jsx-3443398829\"\n  }), \" \\xA0Order Now\")), __jsx(_JSXStyle, {\n    id: \"3443398829\"\n  }, \".card-footer.jsx-3443398829{font-size:1em;position:static;top:0;left:0;max-width:100%;padding:1em 0.75em;}.card-footer-button.jsx-3443398829{padding:0.5em 0.1em;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\\\\\Web-project\\\\\\\\myapp\\\\\\\\pages\\\\\\\\item\\\\\\\\[id].js */\"));\n};\n/*****************************************Content side********************************************** */\n\n\nvar Contentside = function Contentside(props) {\n  return __jsx(\"div\", {\n    className: \"jsx-480648797\" + \" \" + \"col-lg-6 col-sm-12\"\n  }, __jsx(\"div\", {\n    className: \"jsx-480648797\" + \" \" + \"card\"\n  }, __jsx(\"div\", {\n    className: \"jsx-480648797\" + \" \" + \"card-block\"\n  }, __jsx(\"h4\", {\n    className: \"jsx-480648797\" + \" \" + \"card-title font2 topicColor fontsizeE2-25\"\n  }, props.item.itemlongname), __jsx(\"div\", {\n    className: \"jsx-480648797\" + \" \" + \"meta font6 subtopicColor\"\n  }, __jsx(\"a\", {\n    className: \"jsx-480648797\" + \" \" + \"fontsizeE-9\"\n  }, props.item.categery, \"/\", props.item.subcategery), __jsx(\"div\", {\n    className: \"jsx-480648797\" + \" \" + \" float-right fontsizeE-9\"\n  }, __jsx(\"a\", {\n    className: \"jsx-480648797\" + \" \" + \"Icutprise font6\"\n  }, \" \", __jsx(\"strike\", {\n    className: \"jsx-480648797\"\n  }, \"Rs.\", props.item.itemPrice, \".00\"), \"  \"), __jsx(\"a\", {\n    className: \"jsx-480648797\" + \" \" + \"Idiscount font6\"\n  }, \" \", props.item.itemdiscount, \"% \"), __jsx(\"a\", {\n    className: \"jsx-480648797\" + \" \" + \"Iprise font6\"\n  }, \"\\xA0Rs.\", props.item.itemPrice * (100 - props.item.itemdiscount) / 100))), __jsx(\"div\", {\n    className: \"jsx-480648797\" + \" \" + \"card-text font6\"\n  }, props.item.content1), __jsx(\"div\", {\n    className: \"jsx-480648797\" + \" \" + \"card-text font6\"\n  }, props.item.content2), __jsx(\"div\", {\n    className: \"jsx-480648797\" + \" \" + \"menu2-specification\"\n  }, __jsx(\"h5\", {\n    className: \"jsx-480648797\" + \" \" + \"menu2-subcard-title font2 fontcolorSkyblue fontsizeE1\"\n  }, \"Specification\"), __jsx(\"div\", {\n    className: \"jsx-480648797\" + \" \" + \" card-text font6\"\n  }, __jsx(\"div\", {\n    className: \"jsx-480648797\" + \" \" + \"row\"\n  }, props.item.itemSpecification ? props.item.itemSpecification.map(function (x, i) {\n    return __jsx(\"div\", {\n      key: i,\n      className: \"jsx-480648797\" + \" \" + \"col-lg-6 col-sm-12\"\n    }, __jsx(\"a\", {\n      className: \"jsx-480648797\" + \" \" + \"float-left menu2-speca\"\n    }, __jsx(\"img\", {\n      src: \"https://img.icons8.com/metro/15/000000/external-link.png\",\n      className: \"jsx-480648797\"\n    }), \"\\xA0 \\xA0 \", x.name, \" \\xA0: \"), \" \", __jsx(\"a\", {\n      className: \"jsx-480648797\" + \" \" + \"float-left profile-specb\"\n    }, \" \\xA0 \", x.value));\n  }) : null))), __jsx(\"div\", {\n    className: \"jsx-480648797\" + \" \" + \"menu2-stock-details\"\n  }, __jsx(\"h5\", {\n    className: \"jsx-480648797\" + \" \" + \"menu2-subcard-title font2 fontcolorSkyblue fontsizeE1\"\n  }, \"Stock Details\"), __jsx(\"div\", {\n    className: \"jsx-480648797\" + \" \" + \" card-text font6\"\n  }, __jsx(\"div\", {\n    className: \"jsx-480648797\" + \" \" + \"row\"\n  }, props.item.stockDetail ? props.item.stockDetail.map(function (x, i) {\n    return __jsx(\"div\", {\n      key: i,\n      className: \"jsx-480648797\" + \" \" + \"col-lg-6 col-sm-12\"\n    }, __jsx(\"a\", {\n      className: \"jsx-480648797\" + \" \" + \"float-left menu2-speca\"\n    }, __jsx(\"img\", {\n      src: \"https://img.icons8.com/metro/15/000000/external-link.png\",\n      className: \"jsx-480648797\"\n    }), \"\\xA0 \\xA0 \", x.name, \" \\xA0: \"), \" \", __jsx(\"a\", {\n      className: \"jsx-480648797\" + \" \" + \"float-left profile-specb\"\n    }, \" \\xA0 \", x.value));\n  }) : null))), __jsx(\"hr\", {\n    className: \"jsx-480648797\"\n  }), __jsx(Link, {\n    href: myshopmUrl + props.item.shop[0].shopid\n  }, __jsx(\"a\", {\n    href: \"#\",\n    className: \"jsx-480648797\" + \" \" + \"btn btn-primary float-right btn-sm fontsizeE1\"\n  }, __jsx(\"img\", {\n    src: \"https://img.icons8.com/ios/25/ffffff/online-shop.png\",\n    className: \"jsx-480648797\"\n  }), \" \\xA0go to shop\")))), __jsx(_JSXStyle, {\n    id: \"480648797\"\n  }, \"h5.jsx-480648797{font-size:1.5em;font-weight:700;line-height:1.2857em;margin-bottom:20px;}.menu2.jsx-480648797{margin-bottom :20px;}.menu2-topic.jsx-480648797{padding :20px 10px 10px 10px;}.menu2-speca.jsx-480648797{font-size:1em;color:#CF570E;}.menu2-specb.jsx-480648797{font-size:1em;color:#3E1903;}.card.jsx-480648797{font-size:1em;overflow:hidden;padding:0;-webkit-transition:0.5s;transition:0.5s;border :none;}.card-block.jsx-480648797{font-size:1em;position:relative;margin:0;padding:0.5em;box-shadow:none;}.card-img-top.jsx-480648797{display:block;width:100%;height:200;}.card-title.jsx-480648797{font-size:1.28571429em;font-weight:700;line-height:1.2857em;margin-bottom:0px;}.menu2-subcard-title.jsx-480648797{font-size:1em;font-weight:700;line-height:1.2857em;margin-bottom:0px;}.card-text.jsx-480648797{clear:both;margin-top:.5em;color:rgba(0,0,0,.68);font-size :0.9em;}.card-footer.jsx-480648797{font-size:1em;position:static;top:0;left:0;max-width:100%;padding:.5em 0.75em;}.profile.jsx-480648797{position:absolute;top:-12px;display:inline-block;overflow:hidden;width:25px;height:25px;margin:0;}.profile-avatar.jsx-480648797{display:block;width:100%;height:100%;border-radius:50%;}.profile-inline.jsx-480648797{position:relative;top:0;display:inline-block;}.profile-inline.jsx-480648797~.card-title.jsx-480648797{display:inline-block;margin-left:4px;vertical-align:top;}.text-bold.jsx-480648797{font-weight:700;}.meta.jsx-480648797{font-size:1.3em;}.meta.jsx-480648797 a.jsx-480648797{-webkit-text-decoration:none;text-decoration:none;}.Icutprise.jsx-480648797{-webkit-text-decoration:line-through;text-decoration:line-through;color:rgba(0,0,0,.8);font-size:0.75em;}.Idiscount.jsx-480648797{color:darkorange;font-size:0.8em;}.Iprise.jsx-480648797{color:red;font-size:1em;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\\\\\Web-project\\\\\\\\myapp\\\\\\\\pages\\\\\\\\item\\\\\\\\[id].js */\"));\n};\n/****************************************************QuestionSide******************************************* */\n\n\nvar QuestionSide = function QuestionSide(props) {\n  return __jsx(\"div\", {\n    className: \"jsx-2005812590\" + \" \" + \"menu2-quations col-12\"\n  }, __jsx(\"hr\", {\n    className: \"jsx-2005812590\"\n  }), props.questiondata.map(function (x, i) {\n    return __jsx(\"div\", {\n      key: i,\n      className: \"jsx-2005812590\" + \" \" + \"menu2-question \"\n    }, x.answer && Cookie.getJSON('user') && Cookie.getJSON('user')._id == props.shopUserid ? __jsx(\"button\", {\n      onClick: props.removeansewer.bind(_this, x._id),\n      className: \"jsx-2005812590\" + \" \" + \"popup-close-question\"\n    }, \"x\") : null, __jsx(\"img\", {\n      src: \"https://img.icons8.com/cute-clipart/40/000000/faq.png\",\n      className: \"jsx-2005812590\" + \" \" + \"float-left\"\n    }), __jsx(\"p\", {\n      href: \"#\",\n      className: \"jsx-2005812590\" + \" \" + \"font6 fontsizeE-9\"\n    }, \"\\xA0 \", x.question, __jsx(\"br\", {\n      className: \"jsx-2005812590\"\n    }), \" \", __jsx(\"span\", {\n      className: \"jsx-2005812590\" + \" \" + \"spam-text font3 fontsizeE-8\"\n    }, \" -\", x.a_user.name, \"- on \", x.a_Date)), __jsx(\"p\", {\n      className: \"jsx-2005812590\" + \" \" + \"font3 fontsizeE-9\"\n    }, __jsx(\"img\", {\n      src: \"https://img.icons8.com/windows/25/000000/stack-exchange-answer.png\",\n      className: \"jsx-2005812590\"\n    }), \" \\xA0\", x.answer ? x.answer : 'pending answer..'), !x.answer && Cookie.getJSON('user') && Cookie.getJSON('user')._id == props.shopUserid ? __jsx(\"div\", {\n      className: \"jsx-2005812590\"\n    }, __jsx(\"input\", {\n      type: \"text\",\n      name: \"question\",\n      id: 'input-' + x._id,\n      className: \"jsx-2005812590\" + \" \" + \"inputf2\"\n    }), __jsx(\"br\", {\n      className: \"jsx-2005812590\"\n    }), __jsx(\"button\", {\n      onClick: props.handlegiveanswer.bind(_this, x._id),\n      type: \"button\",\n      className: \"jsx-2005812590\" + \" \" + \"btn btn-primary btn-sm\"\n    }, __jsx(\"i\", {\n      \"aria-hidden\": \"true\",\n      className: \"jsx-2005812590\" + \" \" + \"fa fa-bullhorn\"\n    }), \"\\xA0 keep a answer \")) : null, __jsx(\"hr\", {\n      className: \"jsx-2005812590\"\n    }));\n  }), __jsx(\"div\", {\n    className: \"jsx-2005812590\" + \" \" + \"menu2-question\"\n  }, __jsx(\"img\", {\n    src: \"https://img.icons8.com/cute-clipart/40/000000/faq.png\",\n    className: \"jsx-2005812590\" + \" \" + \"float-left\"\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"question\",\n    value: props.question,\n    onChange: props.handleChange,\n    className: \"jsx-2005812590\" + \" \" + \"inputf2\"\n  }), __jsx(\"br\", {\n    className: \"jsx-2005812590\"\n  }), __jsx(\"button\", {\n    onClick: props.handleaskquestion,\n    type: \"button\",\n    className: \"jsx-2005812590\" + \" \" + \"btn btn-primary btn-sm fontsizeE1\"\n  }, __jsx(\"i\", {\n    \"aria-hidden\": \"true\",\n    className: \"jsx-2005812590\" + \" \" + \"fa fa-quora\"\n  }), \"\\xA0 Ask a question \"), __jsx(\"hr\", {\n    className: \"jsx-2005812590\"\n  })), __jsx(_JSXStyle, {\n    id: \"2005812590\"\n  }, \".spam-text.jsx-2005812590{color:gray;}.inputf2.jsx-2005812590{width:80%;color:darkblue;}.popup-close-question.jsx-2005812590{position:relative;top:-1rem;right:0rem;color:white;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;background:#01567e;cursor:pointer;font-size:0.6rem;width:1.2rem;height:1.2rem;border:none;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\\\\\Web-project\\\\\\\\myapp\\\\\\\\pages\\\\\\\\item\\\\\\\\[id].js */\"));\n};\n/*************************************************************Review side************************************************** */\n\n\nvar ReviewSide = function ReviewSide(props) {\n  return __jsx(\"div\", {\n    className: \"jsx-3884520444\" + \" \" + \"menu2-reviews col-12\"\n  }, __jsx(\"h5\", {\n    className: \"jsx-3884520444\" + \" \" + \"menu2-subcard-title font2 fontcolorOrange fontsizeE1\"\n  }, \"Reviews from customer\"), __jsx(\"hr\", {\n    className: \"jsx-3884520444\"\n  }), props.reviewsdata.map(function (x, i) {\n    return __jsx(\"div\", {\n      key: i,\n      className: \"jsx-3884520444\" + \" \" + \"menu2-reviews\"\n    }, __jsx(\"img\", {\n      src: x.user.imageUrl,\n      className: \"jsx-3884520444\" + \" \" + \"float-left avatar\"\n    }), __jsx(\"p\", {\n      className: \"jsx-3884520444\" + \" \" + \"font6 fontsizeE-9\"\n    }, \"\\xA0 \", x.user.name, \" \", __jsx(\"br\", {\n      className: \"jsx-3884520444\"\n    }), \" \", __jsx(\"span\", {\n      className: \"jsx-3884520444\" + \" \" + \"spam-text font3 fontsizeE-8\"\n    }, \" -\", x.createDate, \"-\")), __jsx(\"p\", {\n      className: \"jsx-3884520444\" + \" \" + \"font5 fontweight700 fontsizeE-9\"\n    }, \"\\xA0\\xA0\\xA0\", x.review, \" \"), __jsx(\"hr\", {\n      className: \"jsx-3884520444\"\n    }));\n  }), __jsx(\"div\", {\n    className: \"jsx-3884520444\" + \" \" + \"menu2-question col-12\"\n  }, __jsx(\"img\", {\n    src: \"https://img.icons8.com/ios/40/000000/edit-chat-history.png\",\n    className: \"jsx-3884520444\" + \" \" + \"float-left\"\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"review\",\n    value: props.review,\n    onChange: props.handleChange,\n    className: \"jsx-3884520444\" + \" \" + \"inputf2\"\n  }), __jsx(\"br\", {\n    className: \"jsx-3884520444\"\n  }), __jsx(\"button\", {\n    onClick: props.handlereviews,\n    type: \"button\",\n    className: \"jsx-3884520444\" + \" \" + \"btn btn-danger btn-sm fontsizeE-9\"\n  }, __jsx(\"i\", {\n    \"aria-hidden\": \"true\",\n    className: \"jsx-3884520444\" + \" \" + \"fa fa-comments\"\n  }), \"\\xA0 keep a review \")), __jsx(_JSXStyle, {\n    id: \"3884520444\"\n  }, \".spam-text.jsx-3884520444{color:gray;}.avatar.jsx-3884520444{vertical-align:middle;width:40px;height:40px;border-radius:50%;}.inputf2.jsx-3884520444{width:80%;color:darkblue;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=D:\\\\\\\\Web-project\\\\\\\\myapp\\\\\\\\pages\\\\\\\\item\\\\\\\\[id].js */\"));\n};\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  function Index() {\n    var _this2;\n\n    _classCallCheck(this, Index);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this));\n\n    _defineProperty(_assertThisInitialized(_this2), \"addtocart\", function (itemid, name) {\n      var data = Cookie.getJSON('faverite-item');\n      var jsonarray = [];\n\n      if (data) {\n        if (!data.includes(itemid)) {\n          jsonarray = [].concat(_toConsumableArray(data), [itemid]);\n          Cookie.set('faverite-item', jsonarray);\n          alert(\"add \".concat(name, \" to cart.\"));\n        } else {\n          alert(\"already added \".concat(name, \" to cart.\"));\n        }\n      } else {\n        jsonarray = [itemid];\n        Cookie.set('faverite-item', jsonarray);\n        alert(\"add \".concat(name, \" to cart.\"));\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"handleChange\", function (evt) {\n      // This triggers everytime the input is changed\n      _this2.setState(_defineProperty({}, evt.target.name, evt.target.value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"handlereviews\", function () {\n      var data = new FormData();\n      data.append('user', _JSON$stringify(Cookie.getJSON('user')));\n      data.append('jsonbody', _JSON$stringify(_this2.state));\n      fetch('/api/reviewcreate', {\n        method: 'POST',\n        headers: {},\n        body: data\n      }).then(function (response) {\n        _this2.loadreviews();\n\n        return response.json();\n      }).then(function (data) {\n        if (data != undefined) {\n          _this2.setState({\n            review: ''\n          });\n\n          alert(data.msg);\n        }\n      })[\"catch\"](function (error) {\n        return console.log(error);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"handleaskquestion\", function () {\n      var data = new FormData();\n      data.append('user', _JSON$stringify(Cookie.getJSON('user')));\n      data.append('jsonbody', _JSON$stringify(_this2.state));\n      fetch('/api/questioncreate', {\n        method: 'POST',\n        headers: {},\n        body: data\n      }).then(function (response) {\n        _this2.loadquestions();\n\n        return response.json();\n      }).then(function (data) {\n        if (data != undefined) {\n          _this2.setState({\n            question: ''\n          });\n\n          alert(data.msg);\n        }\n      })[\"catch\"](function (error) {\n        return console.log(error);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"removeansewer\", function (id) {\n      var data = new FormData();\n      fetch('/api/removeansewer/' + id, {\n        method: 'PUT',\n        headers: {},\n        body: data\n      }).then(function (response) {\n        _this2.loadquestions();\n\n        return response.json();\n      }).then(function (data) {\n        if (data != undefined) {\n          _this2.setState({\n            review: ''\n          });\n\n          alert(data.msg);\n        }\n      })[\"catch\"](function (error) {\n        return console.log(error);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"handlegiveanswer\", function (id) {\n      var state = {\n        answer: $(\"#input-\".concat(id)).val()\n      };\n      var data = new FormData();\n      data.append('user', _JSON$stringify(Cookie.getJSON('user')));\n      data.append('jsonbody', _JSON$stringify(state));\n      fetch(\"/api/answertoqestion/\".concat(id), {\n        method: 'POST',\n        headers: {},\n        body: data\n      }).then(function (response) {\n        _this2.loadquestions();\n\n        return response.json();\n      }).then(function (data) {\n        if (data != undefined) {\n          _this2.setState({\n            review: ''\n          });\n\n          alert(data.msg);\n        }\n      })[\"catch\"](function (error) {\n        return console.log(error);\n      });\n    });\n\n    _this2.state = {\n      item: {},\n      itemid: '',\n      question: '',\n      answer: '',\n      questiondata: [],\n      review: '',\n      reviewsdata: [],\n      allitems: []\n    };\n    return _this2;\n  }\n\n  _createClass(Index, [{\n    key: \"showsidebar\",\n\n    /**side navbar */\n    value: function showsidebar() {\n      this.refs.child.showSidebar();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      $(document).ready(function () {\n        function checkWidth() {\n          var windowwidth = $('.silde2image').width();\n          var windowheight = $(window).height(); //if the window is greater than 440px wide then turn on jScrollPane..\n          //  $('.div1').addClass('desktop')\n\n          $('.silde2image').css({\n            'max-height': windowwidth / 3 * 2,\n            'width': '100%'\n          });\n          $('.silde2image').parent().css({\n            'height': windowwidth / 3 * 2,\n            'width': '100%',\n            'background': '#ffffff'\n          });\n        } // Execute on load\n\n\n        checkWidth(); // Bind event listener\n\n        $(window).resize(checkWidth);\n      });\n      this.loadquestions();\n      this.loadreviews();\n      this.loadCatagorybyname();\n    }\n  }, {\n    key: \"loadquestions\",\n    value: function loadquestions() {\n      var _this3 = this;\n\n      fetch(\"\".concat(Url, \"questions/\").concat(this.props.item._id)).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this3.setState({\n          item: _this3.props.item,\n          itemid: _this3.props.item._id ? _this3.props.item._id : '',\n          questiondata: data\n        });\n      });\n    }\n  }, {\n    key: \"loadreviews\",\n    value: function loadreviews() {\n      var _this4 = this;\n\n      fetch(\"\".concat(Url, \"reviews/\").concat(this.props.item._id)).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this4.setState({\n          reviewsdata: data\n        });\n      });\n    }\n  }, {\n    key: \"loadCatagorybyname\",\n    value: function loadCatagorybyname() {\n      var _this5 = this;\n\n      fetch(\"\".concat(Url, \"catagerybyname/\").concat(this.props.item.categery)).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this5.setState({\n          allitems: data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      var sidenavconst = {\n        topic: 'Items',\n        topiclink: 'All Items',\n        sidenavlink: this.state.allitems,\n        visible: this.props.error ? false : true,\n        suburl: 'item'\n      }; //////////////\n\n      return __jsx(Layout, null, __jsx(SubNavbar, {\n        sidenavconst: sidenavconst\n      }), __jsx(\"br\", null), this.props.error ? __jsx(Errorpage, {\n        error: this.props.item\n      }) : __jsx(\"div\", {\n        className: \"container\"\n      }, __jsx(Head, null, __jsx(\"title\", null, \" \", wesitename + ' ' + this.props.item.itemname + ' ' + this.props.item.shop[0].shopName + ' ' + this.props.item.shop[0].town), __jsx(\"meta\", {\n        property: \"og:url\",\n        content: WebUrl\n      }), __jsx(\"meta\", {\n        property: \"og:type\",\n        content: \"article\"\n      }), __jsx(\"meta\", {\n        property: \"og:title\",\n        content: wesitename + ' ' + this.props.item.itemname\n      }), __jsx(\"meta\", {\n        property: \"og:description\",\n        content: this.props.item.content1\n      }), __jsx(\"meta\", {\n        property: \"og:image\",\n        content: ImageUrl + this.props.item.images[0]\n      }), __jsx(\"meta\", {\n        name: \"keywords\",\n        content: this.props.Url.split('-').join(',') + ',sri lanka'\n      }), __jsx(\"meta\", {\n        name: \"description\",\n        content: this.props.item.content1\n      })), __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(Imageside, {\n        item: this.props.item,\n        addtocart: function addtocart(itemid, name) {\n          return _this6.addtocart(itemid, name);\n        }\n      }), __jsx(Contentside, {\n        item: this.props.item\n      }), __jsx(QuestionSide, {\n        shopUserid: this.props.item.user._id,\n        removeansewer: function removeansewer(id) {\n          return _this6.removeansewer(id);\n        },\n        questiondata: this.state.questiondata,\n        question: this.state.question,\n        answer: this.state.answer,\n        handleaskquestion: this.handleaskquestion,\n        handleChange: this.handleChange,\n        handlegiveanswer: function handlegiveanswer(id) {\n          return _this6.handlegiveanswer(id);\n        }\n      }), __jsx(ReviewSide, {\n        reviewsdata: this.state.reviewsdata,\n        review: this.state.review,\n        handleChange: this.handleChange,\n        handlereviews: this.handlereviews\n      }))), __jsx(\"br\", null), __jsx(Footer, null));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nIndex.getInitialProps = function _callee(context) {\n  var _context$query, id, ide, res, item, error;\n\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context$query = context.query, id = _context$query.id, ide = _context$query.ide;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(Url, \"item/\").concat(id, \"?ide=\").concat(ide)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 6:\n          item = _context.sent;\n          error = false;\n\n          if (res.status != 200) {\n            error = true;\n          }\n\n          return _context.abrupt(\"return\", {\n            item: item,\n            error: error\n          });\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["D:/Web-project/myapp/pages/item/[id].js"],"names":["React","Component","Head","Layout","SubNavbar","Footer","Errorpage","$","Url","ImageUrl","myshopmUrl","wesitename","WebUrl","Link","Cookie","Imageside","props","item","images","map","x","i","createDate","addtocart","bind","_id","itemname","Contentside","itemlongname","categery","subcategery","itemPrice","itemdiscount","content1","content2","itemSpecification","name","value","stockDetail","shop","shopid","QuestionSide","questiondata","answer","getJSON","shopUserid","removeansewer","question","a_user","a_Date","handlegiveanswer","handleChange","handleaskquestion","ReviewSide","reviewsdata","user","imageUrl","review","handlereviews","Index","itemid","data","jsonarray","includes","set","alert","evt","setState","target","FormData","append","state","fetch","method","headers","body","then","response","loadreviews","json","undefined","msg","error","console","log","loadquestions","id","val","allitems","refs","child","showSidebar","document","ready","checkWidth","windowwidth","width","windowheight","window","height","css","parent","resize","loadCatagorybyname","res","sidenavconst","topic","topiclink","sidenavlink","visible","suburl","shopName","town","split","join","getInitialProps","context","query","ide","status"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,GAAT,EAAaC,QAAb,EAAsBC,UAAtB,EAAiCC,UAAjC,EAA4CC,MAA5C,QAAyD,uBAAzD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,IAAMC,SAAS,GAAC,SAAVA,SAAU,CAACC,KAAD,EAAU;AACtB,SACJ;AAAA,wCAAe;AAAf,KACI;AAAK,IAAA,EAAE,EAAC,2BAAR;AAA+D,iBAAU,UAAzE;AAAA,wCAA8C;AAA9C,KACJ;AAAA,wCAAc;AAAd,KACCA,KAAK,CAACC,IAAN,CAAWC,MAAX,CAAkBC,GAAlB,CAAsB,UAACC,CAAD,EAAGC,CAAH;AAAA,WACnB;AAAI,MAAA,GAAG,EAAEA,CAAT;AAAY,qBAAY,4BAAxB;AAAqD,uBAAeA,CAApE;AAAA,4CAAkFA,CAAC,IAAE,CAAH,GAAK,QAAL,GAAc,GAAhG;AAAA,MADmB;AAAA,GAAtB,CADD,CADI,EAOJ;AAAA,wCAAe;AAAf,KACCL,KAAK,CAACC,IAAN,CAAWC,MAAX,CAAkBC,GAAlB,CAAsB,UAACC,CAAD,EAAGC,CAAH;AAAA,WACP;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAA,4CAAwBA,CAAC,IAAE,CAAH,GAAK,sBAAL,GAA4B,eAApD;AAAA,OACA;AAA2C,MAAA,GAAG,EAAEZ,QAAQ,GAACW,CAAzD;AAA4D,MAAA,GAAG,EAAC,aAAhE;AAA8E,MAAA,KAAK,EAAC,MAApF;AAAA,0CAAe;AAAf,MADA,CADO;AAAA,GAAtB,CADD,CAPI,EAcJ;AAAqC,IAAA,IAAI,EAAC,4BAA1C;AAAuE,IAAA,IAAI,EAAC,QAA5E;AAAqF,kBAAW,MAAhG;AAAA,wCAAa;AAAb,KACI;AAA6C,mBAAY,MAAzD;AAAA,wCAAgB;AAAhB,IADJ,EAEI;AAAA,wCAAgB;AAAhB,gBAFJ,CAdI,EAkBJ;AAAqC,IAAA,IAAI,EAAC,4BAA1C;AAAuE,IAAA,IAAI,EAAC,QAA5E;AAAqF,kBAAW,MAAhG;AAAA,wCAAa;AAAb,KACI;AAA6C,mBAAY,MAAzD;AAAA,wCAAgB;AAAhB,IADJ,EAEI;AAAA,wCAAgB;AAAhB,YAFJ,CAlBI,CADJ,EAyBQ;AAAA,wCAAe;AAAf,KACI;AAAA,wCAAiB;AAAjB,KAA6CJ,KAAK,CAACC,IAAN,CAAWK,UAAxD,CADJ,EAEM;AAAQ,IAAA,OAAO,EAAEN,KAAK,CAACO,SAAN,CAAgBC,IAAhB,CAAqB,KAArB,EAA0BR,KAAK,CAACC,IAAN,CAAWQ,GAArC,EAAyCT,KAAK,CAACC,IAAN,CAAWS,QAApD,CAAjB;AAAA,wCAA0F;AAA1F,KAA0I;AAAK,IAAA,GAAG,EAAC,wDAAT;AAAA;AAAA,IAA1I,sBAFN,EAGK;AAAQ,IAAA,OAAO,EAAEV,KAAK,CAACO,SAAN,CAAgBC,IAAhB,CAAqB,KAArB,EAA0BR,KAAK,CAACC,IAAN,CAAWQ,GAArC,EAAyCT,KAAK,CAACC,IAAN,CAAWS,QAApD,CAAjB;AAAA,wCAA0F;AAA1F,KAA2I;AAAK,IAAA,GAAG,EAAC,qDAAT;AAAA;AAAA,IAA3I,mBAHL,CAzBR;AAAA;AAAA,66+BADI;AAkDH,CAnDD;AAqDA;;;AACA,IAAMC,WAAW,GAAC,SAAZA,WAAY,CAACX,KAAD,EAAS;AACvB,SACI;AAAA,uCAAe;AAAf,KAEA;AAAA,uCAAe;AAAf,KACI;AAAA,uCAAe;AAAf,KAEI;AAAA,uCAAc;AAAd,KAA2DA,KAAK,CAACC,IAAN,CAAWW,YAAtE,CAFJ,EAGI;AAAA,uCAAe;AAAf,KACI;AAAA,uCAAa;AAAb,KAA6BZ,KAAK,CAACC,IAAN,CAAWY,QAAxC,OAAmDb,KAAK,CAACC,IAAN,CAAWa,WAA9D,CADJ,EAEI;AAAA,uCAAe;AAAf,KACA;AAAA,uCAAa;AAAb,UAAgC;AAAA;AAAA,YAAYd,KAAK,CAACC,IAAN,CAAWc,SAAvB,QAAhC,OADA,EAEA;AAAA,uCAAa;AAAb,UAAiCf,KAAK,CAACC,IAAN,CAAWe,YAA5C,OAFA,EAGA;AAAA,uCAAa;AAAb,gBAAsChB,KAAK,CAACC,IAAN,CAAWc,SAAX,IAAsB,MAAIf,KAAK,CAACC,IAAN,CAAWe,YAArC,IAAmD,GAAzF,CAHA,CAFJ,CAHJ,EAYI;AAAA,uCAAe;AAAf,KACAhB,KAAK,CAACC,IAAN,CAAWgB,QADX,CAZJ,EAeI;AAAA,uCAAe;AAAf,KACCjB,KAAK,CAACC,IAAN,CAAWiB,QADZ,CAfJ,EAkBI;AAAA,uCAAe;AAAf,KACA;AAAA,uCAAc;AAAd,qBADA,EAEA;AAAA,uCAAe;AAAf,KACI;AAAA,uCAAe;AAAf,KACKlB,KAAK,CAACC,IAAN,CAAWkB,iBAAX,GAA6BnB,KAAK,CAACC,IAAN,CAAWkB,iBAAX,CAA6BhB,GAA7B,CAAiC,UAACC,CAAD,EAAGC,CAAH;AAAA,WAC3D;AAAoC,MAAA,GAAG,EAAEA,CAAzC;AAAA,yCAAe;AAAf,OACA;AAAA,yCAAa;AAAb,OAAsC;AAAK,MAAA,GAAG,EAAC,0DAAT;AAAA;AAAA,MAAtC,gBAA0HD,CAAC,CAACgB,IAA5H,YADA,OAC+I;AAAA,yCAAa;AAAb,iBAAiDhB,CAAC,CAACiB,KAAnD,CAD/I,CAD2D;AAAA,GAAjC,CAA7B,GAIK,IALV,CADJ,CAFA,CAlBJ,EA+BI;AAAA,uCAAe;AAAf,KACA;AAAA,uCAAc;AAAd,qBADA,EAEA;AAAA,uCAAe;AAAf,KACI;AAAA,uCAAe;AAAf,KACCrB,KAAK,CAACC,IAAN,CAAWqB,WAAX,GAAuBtB,KAAK,CAACC,IAAN,CAAWqB,WAAX,CAAuBnB,GAAvB,CAA2B,UAACC,CAAD,EAAGC,CAAH;AAAA,WAC3C;AAAoC,MAAA,GAAG,EAAEA,CAAzC;AAAA,yCAAe;AAAf,OACA;AAAA,yCAAa;AAAb,OAAsC;AAAK,MAAA,GAAG,EAAC,0DAAT;AAAA;AAAA,MAAtC,gBAA0HD,CAAC,CAACgB,IAA5H,YADA,OAC+I;AAAA,yCAAa;AAAb,iBAAiDhB,CAAC,CAACiB,KAAnD,CAD/I,CAD2C;AAAA,GAA3B,CAAvB,GAIS,IALV,CADJ,CAFA,CA/BJ,EA6CI;AAAA;AAAA,IA7CJ,EA8CI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE3B,UAAU,GAACM,KAAK,CAACC,IAAN,CAAWsB,IAAX,CAAgB,CAAhB,EAAmBC;AAA1C,KAAkD;AAAG,IAAA,IAAI,EAAC,GAAR;AAAA,uCAAsB;AAAtB,KAAsE;AAAK,IAAA,GAAG,EAAC,sDAAT;AAAA;AAAA,IAAtE,oBAAlD,CA9CJ,CADJ,CAFA;AAAA;AAAA,2njCADJ;AAkMH,CAnMD;AAoMA;;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACzB,KAAD,EAAS;AAC1B,SACI;AAAA,wCAAe;AAAf,KACA;AAAA;AAAA,IADA,EAECA,KAAK,CAAC0B,YAAN,CAAmBvB,GAAnB,CAAuB,UAACC,CAAD,EAAGC,CAAH;AAAA,WACpB;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAA,0CAAuB;AAAvB,OACED,CAAC,CAACuB,MAAF,IAAU7B,MAAM,CAAC8B,OAAP,CAAe,MAAf,CAAV,IAAkC9B,MAAM,CAAC8B,OAAP,CAAe,MAAf,EAAuBnB,GAAvB,IAA4BT,KAAK,CAAC6B,UAArE,GAAiF;AAAyC,MAAA,OAAO,EAAE7B,KAAK,CAAC8B,aAAN,CAAoBtB,IAApB,CAAyB,KAAzB,EAA8BJ,CAAC,CAACK,GAAhC,CAAlD;AAAA,0CAAkB;AAAlB,WAAjF,GAAoL,IADrL,EAEA;AAA4B,MAAA,GAAG,EAAC,uDAAhC;AAAA,0CAAe;AAAf,MAFA,EAEyF;AAAG,MAAA,IAAI,EAAC,GAAR;AAAA,0CAAsB;AAAtB,gBAAkDL,CAAC,CAAC2B,QAApD,EAA6D;AAAA;AAAA,MAA7D,OAAmE;AAAA,0CAAgB;AAAhB,aAAiD3B,CAAC,CAAC4B,MAAF,CAASZ,IAA1D,WAAqEhB,CAAC,CAAC6B,MAAvE,CAAnE,CAFzF,EAGA;AAAA,0CAAc;AAAd,OAAkC;AAAK,MAAA,GAAG,EAAC,oEAAT;AAAA;AAAA,MAAlC,WAAyH7B,CAAC,CAACuB,MAAF,GAASvB,CAAC,CAACuB,MAAX,GAAkB,kBAA3I,CAHA,EAIE,CAACvB,CAAC,CAACuB,MAAH,IAAW7B,MAAM,CAAC8B,OAAP,CAAe,MAAf,CAAX,IAAmC9B,MAAM,CAAC8B,OAAP,CAAe,MAAf,EAAuBnB,GAAvB,IAA4BT,KAAK,CAAC6B,UAAtE,GAAkF;AAAA;AAAA,OACnF;AAA2B,MAAA,IAAI,EAAC,MAAhC;AAAuC,MAAA,IAAI,EAAC,UAA5C;AAAuD,MAAA,EAAE,EAAE,WAASzB,CAAC,CAACK,GAAtE;AAAA,0CAAiB;AAAjB,MADmF,EACN;AAAA;AAAA,MADM,EAEnF;AAAQ,MAAA,OAAO,EAAET,KAAK,CAACkC,gBAAN,CAAuB1B,IAAvB,CAA4B,KAA5B,EAAiCJ,CAAC,CAACK,GAAnC,CAAjB;AAA0D,MAAA,IAAI,EAAC,QAA/D;AAAA,0CAAkF;AAAlF,OAA2G;AAA8B,qBAAY,MAA1C;AAAA,0CAAa;AAAb,MAA3G,wBAFmF,CAAlF,GAIM,IARP,EAUA;AAAA;AAAA,MAVA,CADoB;AAAA,GAAvB,CAFD,EAkBA;AAAA,wCAAe;AAAf,KACA;AAA4B,IAAA,GAAG,EAAC,uDAAhC;AAAA,wCAAe;AAAf,IADA,EAEA;AAA2B,IAAA,IAAI,EAAC,MAAhC;AAAuC,IAAA,IAAI,EAAC,UAA5C;AAAuD,IAAA,KAAK,EAAET,KAAK,CAAC+B,QAApE;AAA+E,IAAA,QAAQ,EAAE/B,KAAK,CAACmC,YAA/F;AAAA,wCAAiB;AAAjB,IAFA,EAE+G;AAAA;AAAA,IAF/G,EAGA;AAAQ,IAAA,OAAO,EAAEnC,KAAK,CAACoC,iBAAvB;AAA0C,IAAA,IAAI,EAAC,QAA/C;AAAA,wCAAkE;AAAlE,KAAsG;AAA2B,mBAAY,MAAvC;AAAA,wCAAa;AAAb,IAAtG,yBAHA,EAKA;AAAA;AAAA,IALA,CAlBA;AAAA;AAAA,w2/BADJ;AAqDH,CAtDD;AAuDA;;;AACA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACrC,KAAD,EAAS;AACxB,SACI;AAAA,wCAAe;AAAf,KACA;AAAA,wCAAc;AAAd,6BADA,EAEA;AAAA;AAAA,IAFA,EAGCA,KAAK,CAACsC,WAAN,CAAkBnC,GAAlB,CAAsB,UAACC,CAAD,EAAGC,CAAH;AAAA,WACpB;AAAK,MAAA,GAAG,EAAEA,CAAV;AAAA,0CAAuB;AAAvB,OACA;AAAmC,MAAA,GAAG,EAAED,CAAC,CAACmC,IAAF,CAAOC,QAA/C;AAAA,0CAAe;AAAf,MADA,EAC2D;AAAA,0CAAc;AAAd,gBAA0CpC,CAAC,CAACmC,IAAF,CAAOnB,IAAjD,OAAuD;AAAA;AAAA,MAAvD,OAA6D;AAAA,0CAAgB;AAAhB,aAAiDhB,CAAC,CAACE,UAAnD,MAA7D,CAD3D,EAEA;AAAA,0CAAc;AAAd,uBAAmEF,CAAC,CAACqC,MAArE,MAFA,EAGA;AAAA;AAAA,MAHA,CADoB;AAAA,GAAtB,CAHD,EAWF;AAAA,wCAAe;AAAf,KACE;AAA4B,IAAA,GAAG,EAAC,4DAAhC;AAAA,wCAAe;AAAf,IADF,EAEE;AAA2B,IAAA,IAAI,EAAC,MAAhC;AAAuC,IAAA,IAAI,EAAC,QAA5C;AAAqD,IAAA,KAAK,EAAEzC,KAAK,CAACyC,MAAlE;AAA2E,IAAA,QAAQ,EAAEzC,KAAK,CAACmC,YAA3F;AAAA,wCAAiB;AAAjB,IAFF,EAE6G;AAAA;AAAA,IAF7G,EAGE;AAAQ,IAAA,OAAO,EAAEnC,KAAK,CAAC0C,aAAvB;AAAsC,IAAA,IAAI,EAAC,QAA3C;AAAA,wCAA8D;AAA9D,KAAkG;AAA8B,mBAAY,MAA1C;AAAA,wCAAa;AAAb,IAAlG,wBAHF,CAXE;AAAA;AAAA,k8+BADJ;AAoCH,CArCD;;IAsCMC,K;;;AACF,mBAAc;AAAA;;AAAA;;AACV;;AADU,iEAiBJ,UAACC,MAAD,EAAQxB,IAAR,EAAe;AACrB,UAAIyB,IAAI,GAAG/C,MAAM,CAAC8B,OAAP,CAAe,eAAf,CAAX;AACA,UAAIkB,SAAS,GAAG,EAAhB;;AAEA,UAAGD,IAAH,EAAQ;AACJ,YAAG,CAACA,IAAI,CAACE,QAAL,CAAcH,MAAd,CAAJ,EACA;AAACE,UAAAA,SAAS,gCAAOD,IAAP,IAAYD,MAAZ,EAAT;AACD9C,UAAAA,MAAM,CAACkD,GAAP,CAAW,eAAX,EAA2BF,SAA3B;AACAG,UAAAA,KAAK,eAAQ7B,IAAR,eAAL;AACC,SAJD,MAIK;AACL6B,UAAAA,KAAK,yBAAkB7B,IAAlB,eAAL;AACC;AACJ,OARD,MAQK;AACD0B,QAAAA,SAAS,GAAG,CAACF,MAAD,CAAZ;AACA9C,QAAAA,MAAM,CAACkD,GAAP,CAAW,eAAX,EAA2BF,SAA3B;AACAG,QAAAA,KAAK,eAAQ7B,IAAR,eAAL;AACH;AAGJ,KApCa;;AAAA,oEAsCC,UAAA8B,GAAG,EAAI;AAClB;AACI,aAAKC,QAAL,qBACKD,GAAG,CAACE,MAAJ,CAAWhC,IADhB,EACuB8B,GAAG,CAACE,MAAJ,CAAW/B,KADlC;AAIH,KA5CS;;AAAA,qEA+CA,YAAI;AACd,UAAMwB,IAAI,GAAG,IAAIQ,QAAJ,EAAb;AACAR,MAAAA,IAAI,CAACS,MAAL,CAAY,MAAZ,EAAoB,gBAAexD,MAAM,CAAC8B,OAAP,CAAe,MAAf,CAAf,CAApB;AACAiB,MAAAA,IAAI,CAACS,MAAL,CAAY,UAAZ,EAAwB,gBAAe,OAAKC,KAApB,CAAxB;AAEAC,MAAAA,KAAK,CAAC,mBAAD,EAAqB;AACtBC,QAAAA,MAAM,EAAE,MADc;AAEtBC,QAAAA,OAAO,EAAE,EAFa;AAItBC,QAAAA,IAAI,EAACd;AAJiB,OAArB,CAAL,CAQCe,IARD,CAQM,UAAAC,QAAQ,EAAI;AAAC,eAAKC,WAAL;;AAAoB,eAAOD,QAAQ,CAACE,IAAT,EAAP;AAAyB,OARhE,EASCH,IATD,CASM,UAAAf,IAAI,EAAI;AAAE,YAAGA,IAAI,IAAEmB,SAAT,EAAmB;AAAC,iBAAKb,QAAL,CAAc;AAACV,YAAAA,MAAM,EAAC;AAAR,WAAd;;AAA2BQ,UAAAA,KAAK,CAACJ,IAAI,CAACoB,GAAN,CAAL;AAAiB;AAAC,OATjF,WAUO,UAAAC,KAAK;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,OAVZ;AAWH,KA/Da;;AAAA,yEAiEI,YAAI;AAClB,UAAMrB,IAAI,GAAG,IAAIQ,QAAJ,EAAb;AACAR,MAAAA,IAAI,CAACS,MAAL,CAAY,MAAZ,EAAoB,gBAAexD,MAAM,CAAC8B,OAAP,CAAe,MAAf,CAAf,CAApB;AACAiB,MAAAA,IAAI,CAACS,MAAL,CAAY,UAAZ,EAAwB,gBAAe,OAAKC,KAApB,CAAxB;AAEAC,MAAAA,KAAK,CAAC,qBAAD,EAAuB;AACxBC,QAAAA,MAAM,EAAE,MADgB;AAExBC,QAAAA,OAAO,EAAE,EAFe;AAIxBC,QAAAA,IAAI,EAACd;AAJmB,OAAvB,CAAL,CAQCe,IARD,CAQM,UAAAC,QAAQ,EAAI;AAAC,eAAKQ,aAAL;;AAAsB,eAAOR,QAAQ,CAACE,IAAT,EAAP;AAAyB,OARlE,EASCH,IATD,CASM,UAAAf,IAAI,EAAI;AAAE,YAAGA,IAAI,IAAEmB,SAAT,EAAmB;AAAE,iBAAKb,QAAL,CAAc;AAACpB,YAAAA,QAAQ,EAAC;AAAV,WAAd;;AAA8BkB,UAAAA,KAAK,CAACJ,IAAI,CAACoB,GAAN,CAAL;AAAiB;AAAC,OATrF,WAUO,UAAAC,KAAK;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,OAVZ;AAaH,KAnFa;;AAAA,qEAqFA,UAACI,EAAD,EAAM;AAChB,UAAMzB,IAAI,GAAG,IAAIQ,QAAJ,EAAb;AAEAG,MAAAA,KAAK,CAAC,wBAAsBc,EAAvB,EAA0B;AAC3Bb,QAAAA,MAAM,EAAE,KADmB;AAE3BC,QAAAA,OAAO,EAAE,EAFkB;AAI3BC,QAAAA,IAAI,EAACd;AAJsB,OAA1B,CAAL,CAQCe,IARD,CAQM,UAAAC,QAAQ,EAAI;AAAC,eAAKQ,aAAL;;AAAsB,eAAOR,QAAQ,CAACE,IAAT,EAAP;AAAyB,OARlE,EASCH,IATD,CASM,UAAAf,IAAI,EAAI;AAAE,YAAGA,IAAI,IAAEmB,SAAT,EAAmB;AAAC,iBAAKb,QAAL,CAAc;AAACV,YAAAA,MAAM,EAAC;AAAR,WAAd;;AAA2BQ,UAAAA,KAAK,CAACJ,IAAI,CAACoB,GAAN,CAAL;AAAiB;AAAC,OATjF,WAUO,UAAAC,KAAK;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,OAVZ;AAWH,KAnGa;;AAAA,wEAqGG,UAACI,EAAD,EAAM;AACnB,UAAIf,KAAK,GAAI;AACT5B,QAAAA,MAAM,EAAEpC,CAAC,kBAAW+E,EAAX,EAAD,CAAkBC,GAAlB;AADC,OAAb;AAGI,UAAM1B,IAAI,GAAG,IAAIQ,QAAJ,EAAb;AACAR,MAAAA,IAAI,CAACS,MAAL,CAAY,MAAZ,EAAoB,gBAAexD,MAAM,CAAC8B,OAAP,CAAe,MAAf,CAAf,CAApB;AACAiB,MAAAA,IAAI,CAACS,MAAL,CAAY,UAAZ,EAAwB,gBAAeC,KAAf,CAAxB;AAEAC,MAAAA,KAAK,gCAAyBc,EAAzB,GAA8B;AAC/Bb,QAAAA,MAAM,EAAE,MADuB;AAE/BC,QAAAA,OAAO,EAAE,EAFsB;AAI/BC,QAAAA,IAAI,EAACd;AAJ0B,OAA9B,CAAL,CAQCe,IARD,CAQM,UAAAC,QAAQ,EAAI;AAAC,eAAKQ,aAAL;;AAAsB,eAAOR,QAAQ,CAACE,IAAT,EAAP;AAAyB,OARlE,EASCH,IATD,CASM,UAAAf,IAAI,EAAI;AAAC,YAAGA,IAAI,IAAEmB,SAAT,EAAmB;AAAC,iBAAKb,QAAL,CAAc;AAACV,YAAAA,MAAM,EAAC;AAAR,WAAd;;AAA2BQ,UAAAA,KAAK,CAACJ,IAAI,CAACoB,GAAN,CAAL;AAAiB;AAAC,OAThF,WAUO,UAAAC,KAAK;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAJ;AAAA,OAVZ;AAaP,KA1Ha;;AAEV,WAAKX,KAAL,GAAa;AACTtD,MAAAA,IAAI,EAAC,EADI;AAET2C,MAAAA,MAAM,EAAC,EAFE;AAGTb,MAAAA,QAAQ,EAAE,EAHD;AAITJ,MAAAA,MAAM,EAAE,EAJC;AAKTD,MAAAA,YAAY,EAAC,EALJ;AAMTe,MAAAA,MAAM,EAAC,EANE;AAOTH,MAAAA,WAAW,EAAC,EAPH;AAQTkC,MAAAA,QAAQ,EAAC;AARA,KAAb;AAFU;AAeb;;;;;AA4GD;kCACa;AACT,WAAKC,IAAL,CAAUC,KAAV,CAAgBC,WAAhB;AACD;;;wCAEgB;AACfpF,MAAAA,CAAC,CAACqF,QAAD,CAAD,CAAYC,KAAZ,CAAkB,YAAW;AAGzB,iBAASC,UAAT,GAAsB;AAClB,cAAIC,WAAW,GAAGxF,CAAC,CAAC,cAAD,CAAD,CAAkByF,KAAlB,EAAlB;AACA,cAAIC,YAAY,GAAG1F,CAAC,CAAC2F,MAAD,CAAD,CAAUC,MAAV,EAAnB,CAFkB,CAGd;AACF;;AACA5F,UAAAA,CAAC,CAAC,cAAD,CAAD,CAAkB6F,GAAlB,CAAsB;AAAC,0BAAaL,WAAW,GAAC,CAAZ,GAAc,CAA5B;AAA8B,qBAAQ;AAAtC,WAAtB;AACAxF,UAAAA,CAAC,CAAC,cAAD,CAAD,CAAkB8F,MAAlB,GAA2BD,GAA3B,CAA+B;AAAC,sBAASL,WAAW,GAAC,CAAZ,GAAc,CAAxB;AAA0B,qBAAQ,MAAlC;AAAyC,0BAAc;AAAvD,WAA/B;AAEL,SAXwB,CAYzB;;;AACAD,QAAAA,UAAU,GAbe,CAczB;;AACAvF,QAAAA,CAAC,CAAC2F,MAAD,CAAD,CAAUI,MAAV,CAAiBR,UAAjB;AAEP,OAjBG;AAmBA,WAAKT,aAAL;AACA,WAAKP,WAAL;AACA,WAAKyB,kBAAL;AAEH;;;oCAEc;AAAA;;AACX/B,MAAAA,KAAK,WAAIhE,GAAJ,uBAAoB,KAAKQ,KAAL,CAAWC,IAAX,CAAgBQ,GAApC,EAAL,CACCmD,IADD,CACM,UAAA4B,GAAG,EAAE;AAAE,eAAOA,GAAG,CAACzB,IAAJ,EAAP;AAAmB,OADhC,EAECH,IAFD,CAEM,UAAAf,IAAI,EAAE;AACR,QAAA,MAAI,CAACM,QAAL,CAAc;AACVlD,UAAAA,IAAI,EAAC,MAAI,CAACD,KAAL,CAAWC,IADN;AAEV2C,UAAAA,MAAM,EAAC,MAAI,CAAC5C,KAAL,CAAWC,IAAX,CAAgBQ,GAAhB,GAAoB,MAAI,CAACT,KAAL,CAAWC,IAAX,CAAgBQ,GAApC,GAAwC,EAFrC;AAGViB,UAAAA,YAAY,EAAGmB;AAHL,SAAd;AAKH,OARD;AASH;;;kCACY;AAAA;;AACTW,MAAAA,KAAK,WAAIhE,GAAJ,qBAAkB,KAAKQ,KAAL,CAAWC,IAAX,CAAgBQ,GAAlC,EAAL,CACCmD,IADD,CACM,UAAA4B,GAAG,EAAE;AAAE,eAAOA,GAAG,CAACzB,IAAJ,EAAP;AAAmB,OADhC,EAECH,IAFD,CAEM,UAAAf,IAAI,EAAE;AACR,QAAA,MAAI,CAACM,QAAL,CAAc;AACVb,UAAAA,WAAW,EAAGO;AADJ,SAAd;AAGH,OAND;AAOH;;;yCACmB;AAAA;;AAChBW,MAAAA,KAAK,WAAIhE,GAAJ,4BAAyB,KAAKQ,KAAL,CAAWC,IAAX,CAAgBY,QAAzC,EAAL,CACC+C,IADD,CACM,UAAA4B,GAAG,EAAE;AAAE,eAAOA,GAAG,CAACzB,IAAJ,EAAP;AAAmB,OADhC,EAECH,IAFD,CAEM,UAAAf,IAAI,EAAE;AACR,QAAA,MAAI,CAACM,QAAL,CAAc;AACVqB,UAAAA,QAAQ,EAAG3B;AADD,SAAd;AAGH,OAND;AAOH;;;6BAEQ;AAAA;;AAGT,UAAM4C,YAAY,GAAG;AAACC,QAAAA,KAAK,EAAG,OAAT;AAAiBC,QAAAA,SAAS,EAAC,WAA3B;AAAuCC,QAAAA,WAAW,EAAC,KAAKrC,KAAL,CAAWiB,QAA9D;AAAuEqB,QAAAA,OAAO,EAAC,KAAK7F,KAAL,CAAWkE,KAAX,GAAiB,KAAjB,GAAuB,IAAtG;AAA4G4B,QAAAA,MAAM,EAAC;AAAnH,OAArB,CAHS,CAIb;;AAEU,aACE,MAAC,MAAD,QAIK,MAAC,SAAD;AAAW,QAAA,YAAY,EAAEL;AAAzB,QAJL,EAKI,iBALJ,EAMK,KAAKzF,KAAL,CAAWkE,KAAX,GAAiB,MAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKlE,KAAL,CAAWC;AAA7B,QAAjB,GACD;AAAK,QAAA,SAAS,EAAC;AAAf,SAEA,MAAC,IAAD,QACA,0BAASN,UAAU,GAAC,GAAX,GAAe,KAAKK,KAAL,CAAWC,IAAX,CAAgBS,QAA/B,GAAwC,GAAxC,GAA4C,KAAKV,KAAL,CAAWC,IAAX,CAAgBsB,IAAhB,CAAqB,CAArB,EAAwBwE,QAApE,GAA6E,GAA7E,GAAiF,KAAK/F,KAAL,CAAWC,IAAX,CAAgBsB,IAAhB,CAAqB,CAArB,EAAwByE,IAAlH,CADA,EAEA;AAAM,QAAA,QAAQ,EAAC,QAAf;AAAkC,QAAA,OAAO,EAAEpG;AAA3C,QAFA,EAGA;AAAM,QAAA,QAAQ,EAAC,SAAf;AAAkC,QAAA,OAAO,EAAC;AAA1C,QAHA,EAIA;AAAM,QAAA,QAAQ,EAAC,UAAf;AAAkC,QAAA,OAAO,EAAED,UAAU,GAAC,GAAX,GAAe,KAAKK,KAAL,CAAWC,IAAX,CAAgBS;AAA1E,QAJA,EAKA;AAAM,QAAA,QAAQ,EAAC,gBAAf;AAAkC,QAAA,OAAO,EAAE,KAAKV,KAAL,CAAWC,IAAX,CAAgBgB;AAA3D,QALA,EAMA;AAAM,QAAA,QAAQ,EAAC,UAAf;AAAkC,QAAA,OAAO,EAAExB,QAAQ,GAAC,KAAKO,KAAL,CAAWC,IAAX,CAAgBC,MAAhB,CAAuB,CAAvB;AAApD,QANA,EAQA;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAE,KAAKF,KAAL,CAAWR,GAAX,CAAeyG,KAAf,CAAqB,GAArB,EAA0BC,IAA1B,CAA+B,GAA/B,IAAoC;AAAnE,QARA,EASA;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAE,KAAKlG,KAAL,CAAWC,IAAX,CAAgBgB;AAAlD,QATA,CAFA,EAcA;AAAK,QAAA,SAAS,EAAC;AAAf,SACA,MAAC,SAAD;AAAW,QAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWC,IAA5B;AAAkC,QAAA,SAAS,EAAE,mBAAC2C,MAAD,EAAQxB,IAAR;AAAA,iBAAe,MAAI,CAACb,SAAL,CAAeqC,MAAf,EAAsBxB,IAAtB,CAAf;AAAA;AAA7C,QADA,EAEA,MAAC,WAAD;AAAa,QAAA,IAAI,EAAE,KAAKpB,KAAL,CAAWC;AAA9B,QAFA,EAGA,MAAC,YAAD;AAAc,QAAA,UAAU,EAAE,KAAKD,KAAL,CAAWC,IAAX,CAAgBsC,IAAhB,CAAqB9B,GAA/C;AAAoD,QAAA,aAAa,EAAE,uBAAC6D,EAAD;AAAA,iBAAM,MAAI,CAACxC,aAAL,CAAmBwC,EAAnB,CAAN;AAAA,SAAnE;AAAiG,QAAA,YAAY,EAAE,KAAKf,KAAL,CAAW7B,YAA1H;AAAwI,QAAA,QAAQ,EAAE,KAAK6B,KAAL,CAAWxB,QAA7J;AAAuK,QAAA,MAAM,EAAE,KAAKwB,KAAL,CAAW5B,MAA1L;AAAkM,QAAA,iBAAiB,EAAE,KAAKS,iBAA1N;AAA6O,QAAA,YAAY,EAAE,KAAKD,YAAhQ;AAA8Q,QAAA,gBAAgB,EAAE,0BAACmC,EAAD;AAAA,iBAAM,MAAI,CAACpC,gBAAL,CAAsBoC,EAAtB,CAAN;AAAA;AAAhS,QAHA,EAIA,MAAC,UAAD;AAAY,QAAA,WAAW,EAAE,KAAKf,KAAL,CAAWjB,WAApC;AAAiD,QAAA,MAAM,EAAE,KAAKiB,KAAL,CAAWd,MAApE;AAA4E,QAAA,YAAY,EAAE,KAAKN,YAA/F;AAA6G,QAAA,aAAa,EAAE,KAAKO;AAAjI,QAJA,CAdA,CAPJ,EA6BI,iBA7BJ,EA8BI,MAAC,MAAD,OA9BJ,CADF;AAkCH;;;;EAjOazD,S;;AAqOpB0D,KAAK,CAACwD,eAAN,GAAwB,iBAAeC,OAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,2BACDA,OAAO,CAACC,KADP,EACZ/B,EADY,kBACZA,EADY,EACTgC,GADS,kBACTA,GADS;AAAA;AAAA,2CAEF9C,KAAK,WAAIhE,GAAJ,kBAAe8E,EAAf,kBAAyBgC,GAAzB,EAFH;;AAAA;AAEdd,UAAAA,GAFc;AAAA;AAAA,2CAIDA,GAAG,CAACzB,IAAJ,EAJC;;AAAA;AAId9D,UAAAA,IAJc;AAKfiE,UAAAA,KALe,GAKP,KALO;;AAMnB,cAAGsB,GAAG,CAACe,MAAJ,IAAY,GAAf,EAAmB;AAClBrC,YAAAA,KAAK,GAAG,IAAR;AACD;;AARmB,2CAUb;AAACjE,YAAAA,IAAI,EAAJA,IAAD;AAAMiE,YAAAA,KAAK,EAALA;AAAN,WAVa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAeE,eAAevB,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Head from 'next/head';\r\nimport Layout from '../../layouts/MainLayout';\r\nimport SubNavbar from '../../layouts/SubNavbar';\r\nimport Footer from '../../components/Footer';\r\nimport Errorpage from './../../layouts/error';\r\nimport $ from 'jquery';\r\nimport  {Url,ImageUrl,myshopmUrl,wesitename,WebUrl} from './../../constant/main';\r\nimport Link from 'next/link';\r\nimport Cookie from \"js-cookie\";\r\n\r\nconst Imageside=(props)=> {\r\n    return(\r\n<div className=\"col-lg-6 col-sm-12\">\r\n    <div id=\"carouselExampleIndicators\" className=\"carousel slide\" data-ride=\"carousel\">\r\n<ol className=\"carousel-indicators\">\r\n{props.item.images.map((x,i)=>\r\n    <li key={i} data-target=\"#carouselExampleIndicators\" data-slide-to={i} className={i==0?'active':'c'} ></li> \r\n    )}\r\n\r\n</ol>\r\n<div className=\"carousel-inner\">\r\n{props.item.images.map((x,i)=>\r\n                <div key={i} className={i==0?'carousel-item active':'carousel-item'}>\r\n                <img className=\"d-block w-100 silde2image\" src={ImageUrl+x} alt=\"first slide\" width=\"100%\" />\r\n                </div> \r\n                )}\r\n</div>\r\n<a className=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\r\n    <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n    <span className=\"sr-only\">Previous</span>\r\n</a>\r\n<a className=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\r\n    <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n    <span className=\"sr-only\">Next</span>\r\n</a>\r\n</div>\r\n\r\n        <div className=\"card-footer\">\r\n            <small className=\"font3 card-footer-button\">{props.item.createDate}</small>\r\n              <button onClick={props.addtocart.bind(this,props.item._id,props.item.itemname)} className=\"btn btn-danger float-right btn-sm fontsizeE-9\"><img src=\"https://img.icons8.com/ios/25/ffffff/favorite-cart.png\"/> &nbsp; Add to Cart</button>\r\n             <button onClick={props.addtocart.bind(this,props.item._id,props.item.itemname)} className=\"btn btn-primary float-right btn-sm fontsizeE-9\"><img src=\"https://img.icons8.com/ios/25/ffffff/in-transit.png\"/> &nbsp;Order Now</button>\r\n           \r\n        </div>\r\n\r\n        <style jsx >\r\n        {`  .card-footer {\r\n            font-size: 1em;\r\n            position: static;\r\n            top: 0;\r\n            left: 0;\r\n            max-width: 100%;\r\n            padding: 1em 0.75em;\r\n            \r\n        }\r\n        .card-footer-button{\r\n            padding: 0.5em 0.1em;\r\n        }\r\n        `}\r\n        </style>\r\n    </div>\r\n    )\r\n}\r\n\r\n/*****************************************Content side********************************************** */\r\nconst Contentside=(props)=>{\r\n    return (\r\n        <div className=\"col-lg-6 col-sm-12\">\r\n\r\n        <div className=\"card\">\r\n            <div className=\"card-block\">\r\n            \r\n                <h4 className=\"card-title font2 topicColor fontsizeE2-25\">{props.item.itemlongname}</h4>\r\n                <div className=\"meta font6 subtopicColor\">\r\n                    <a className=\"fontsizeE-9\" >{props.item.categery}/{props.item.subcategery}</a>\r\n                    <div className=\" float-right fontsizeE-9\"> \r\n                    <a className=\"Icutprise font6\"> <strike>Rs.{props.item.itemPrice}.00</strike>  </a> \r\n                    <a className=\"Idiscount font6\"> {props.item.itemdiscount}% </a>\r\n                    <a className=\"Iprise font6\">&nbsp;Rs.{props.item.itemPrice*(100-props.item.itemdiscount)/100}</a>\r\n                    \r\n                    </div>\r\n                </div>\r\n                <div className=\"card-text font6\">\r\n               {props.item.content1}\r\n               </div>\r\n                <div className=\"card-text font6\">\r\n                {props.item.content2}\r\n                </div>\r\n                <div className=\"menu2-specification\">\r\n                <h5 className=\"menu2-subcard-title font2 fontcolorSkyblue fontsizeE1\">Specification</h5>\r\n                <div className=\" card-text font6\">\r\n                    <div className=\"row\">\r\n                        {props.item.itemSpecification?props.item.itemSpecification.map((x,i)=>\r\n                            <div className=\"col-lg-6 col-sm-12\" key={i}>\r\n                            <a className=\"float-left menu2-speca\"><img src=\"https://img.icons8.com/metro/15/000000/external-link.png\"/>&nbsp; &nbsp; {x.name} &nbsp;: </a> <a className=\"float-left profile-specb\"> &nbsp; {x.value}</a>\r\n                            </div>\r\n                            ):null}\r\n                      \r\n                \r\n                    </div>\r\n                </div></div>\r\n                <div className=\"menu2-stock-details\">\r\n                <h5 className=\"menu2-subcard-title font2 fontcolorSkyblue fontsizeE1\">Stock Details</h5>\r\n                <div className=\" card-text font6\">\r\n                    <div className=\"row\">\r\n                    {props.item.stockDetail?props.item.stockDetail.map((x,i)=>\r\n                            <div className=\"col-lg-6 col-sm-12\" key={i}>\r\n                            <a className=\"float-left menu2-speca\"><img src=\"https://img.icons8.com/metro/15/000000/external-link.png\"/>&nbsp; &nbsp; {x.name} &nbsp;: </a> <a className=\"float-left profile-specb\"> &nbsp; {x.value}</a>\r\n                            </div>\r\n                            ):null}\r\n    \r\n                      \r\n                \r\n                    </div>\r\n                </div></div>\r\n                <hr/>\r\n                <Link href={myshopmUrl+props.item.shop[0].shopid}><a href=\"#\" className=\"btn btn-primary float-right btn-sm fontsizeE1\"><img src=\"https://img.icons8.com/ios/25/ffffff/online-shop.png\"/> &nbsp;go to shop</a></Link>\r\n                </div>\r\n           \r\n        </div>\r\n        <style jsx>\r\n                {`\r\n                h5 {\r\n                    font-size: 1.5em;\r\n                    font-weight: 700;\r\n                    line-height: 1.2857em;\r\n                    margin-bottom: 20px;\r\n                }\r\n                .menu2{\r\n                    margin-bottom : 20px;\r\n                }\r\n                .menu2-topic{\r\n                    padding : 20px 10px 10px 10px;\r\n                }\r\n                .menu2-speca{\r\n                    font-size: 1em;\r\n                    color: #CF570E ;\r\n                    \r\n                }\r\n                .menu2-specb{\r\n                    font-size: 1em;\r\n                    color: #3E1903;\r\n                }\r\n                .card {\r\n                    font-size: 1em;\r\n                    overflow: hidden;\r\n                    padding: 0;\r\n                    transition: 0.5s;\r\n                    border : none;\r\n                }\r\n              \r\n                .card-block {\r\n                    font-size: 1em;\r\n                    position: relative;\r\n                    margin: 0;\r\n                    padding: 0.5em;\r\n                    box-shadow: none;\r\n                }\r\n                \r\n                .card-img-top {\r\n                    display: block;\r\n                    width: 100%;\r\n                    height: 200;\r\n                }\r\n                \r\n                .card-title {\r\n                    font-size: 1.28571429em;\r\n                    font-weight: 700;\r\n                    line-height: 1.2857em;\r\n                    margin-bottom: 0px;\r\n                    \r\n                }\r\n                .menu2-subcard-title {\r\n                    font-size: 1em;\r\n                    font-weight: 700;\r\n                    line-height: 1.2857em;\r\n                    margin-bottom: 0px;\r\n                    \r\n                }\r\n                \r\n                .card-text {\r\n                    clear: both;\r\n                    margin-top: .5em;\r\n                    color: rgba(0, 0, 0, .68);\r\n                    font-size : 0.9em;\r\n                }\r\n                \r\n                .card-footer {\r\n                    font-size: 1em;\r\n                    position: static;\r\n                    top: 0;\r\n                    left: 0;\r\n                    max-width: 100%;\r\n                    padding: .5em 0.75em;\r\n                    \r\n                }\r\n                \r\n                \r\n                .profile {\r\n                    position: absolute;\r\n                    top: -12px;\r\n                    display: inline-block;\r\n                    overflow: hidden;\r\n                    width: 25px;\r\n                    height: 25px;\r\n                    margin: 0;\r\n\r\n                }\r\n                \r\n                .profile-avatar {\r\n                    display: block;\r\n                    width: 100%;\r\n                    height: 100%;\r\n                    border-radius: 50%;\r\n                }\r\n                \r\n                .profile-inline {\r\n                    position: relative;\r\n                    top: 0;\r\n                    display: inline-block;\r\n                }\r\n                \r\n                .profile-inline ~ .card-title {\r\n                    display: inline-block;\r\n                    margin-left: 4px;\r\n                    vertical-align: top;\r\n                }\r\n                \r\n                .text-bold {\r\n                    font-weight: 700;\r\n                }\r\n                \r\n                .meta {\r\n                    font-size: 1.3em;\r\n                    \r\n                }\r\n                \r\n                .meta a {\r\n                    text-decoration: none;\r\n                    \r\n                }\r\n                .Icutprise{\r\n                    text-decoration: line-through;\r\n                    color: rgba(0, 0, 0, .8);\r\n                    font-size: 0.75em;\r\n                }\r\n                .Idiscount{\r\n                    color: darkorange;\r\n                    font-size: 0.8em;\r\n                }\r\n                .Iprise{\r\n                    color: red;\r\n                    font-size: 1em;\r\n                }\r\n                `}\r\n                </style>\r\n           \r\n            </div>\r\n        \r\n    )\r\n}\r\n/****************************************************QuestionSide******************************************* */\r\nconst QuestionSide = (props)=>{\r\n    return(\r\n        <div className=\"menu2-quations col-12\">\r\n        <hr/>\r\n        {props.questiondata.map((x,i)=>\r\n            <div key={i} className=\"menu2-question \">\r\n            {(x.answer&&Cookie.getJSON('user')&&Cookie.getJSON('user')._id==props.shopUserid)?<button className=\"popup-close-question\" onClick={props.removeansewer.bind(this,x._id)}>x</button>:null}\r\n            <img className=\"float-left\" src=\"https://img.icons8.com/cute-clipart/40/000000/faq.png\"/><p href=\"#\" className=\"font6 fontsizeE-9\">&nbsp; {x.question}<br/> <span className=\"spam-text font3 fontsizeE-8\"> -{x.a_user.name}- on {x.a_Date}</span></p>\r\n            <p  className=\"font3 fontsizeE-9\"><img src=\"https://img.icons8.com/windows/25/000000/stack-exchange-answer.png\"/> &nbsp;{x.answer?x.answer:'pending answer..'}</p>\r\n            {(!x.answer&&Cookie.getJSON('user')&&Cookie.getJSON('user')._id==props.shopUserid)?<div>\r\n            <input className=\"inputf2\" type=\"text\" name=\"question\" id={'input-'+x._id} /><br/>\r\n            <button onClick={props.handlegiveanswer.bind(this,x._id)} type=\"button\" className=\"btn btn-primary btn-sm\"><i className=\"fa fa-bullhorn\" aria-hidden=\"true\"></i>&nbsp; keep a answer </button>\r\n        \r\n            </div>:null}\r\n            \r\n            <hr/>\r\n            </div>  \r\n            )}\r\n      \r\n\r\n        <div className=\"menu2-question\">\r\n        <img className=\"float-left\" src=\"https://img.icons8.com/cute-clipart/40/000000/faq.png\"/>\r\n        <input className=\"inputf2\" type=\"text\" name=\"question\" value={props.question}  onChange={props.handleChange} /><br/>\r\n        <button onClick={props.handleaskquestion} type=\"button\" className=\"btn btn-primary btn-sm fontsizeE1\"><i className=\"fa fa-quora\" aria-hidden=\"true\"></i>&nbsp; Ask a question </button>\r\n        \r\n        <hr/>\r\n        </div>\r\n\r\n       <style jsx >\r\n       {`.spam-text{\r\n           color:gray\r\n       }\r\n       .inputf2{\r\n        width: 80%;\r\n        color: darkblue;\r\n       }\r\n       .popup-close-question {\r\n        position: relative;\r\n        top: -1rem;\r\n        right: 0rem;\r\n        color: white;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background: #01567e;\r\n        cursor: pointer;\r\n        font-size: 0.6rem;\r\n        width: 1.2rem;\r\n        height: 1.2rem;\r\n        border:none;\r\n       `}\r\n       </style>\r\n        </div>\r\n    )\r\n}\r\n/*************************************************************Review side************************************************** */\r\nconst ReviewSide = (props)=>{\r\n    return(\r\n        <div className=\"menu2-reviews col-12\">\r\n        <h5 className=\"menu2-subcard-title font2 fontcolorOrange fontsizeE1\">Reviews from customer</h5>\r\n        <hr/>\r\n        {props.reviewsdata.map((x,i)=>\r\n           <div key={i} className=\"menu2-reviews\">\r\n           <img className=\"float-left avatar\" src={x.user.imageUrl} /><p  className=\"font6 fontsizeE-9\">&nbsp; {x.user.name} <br/> <span className=\"spam-text font3 fontsizeE-8\"> -{x.createDate}-</span></p>\r\n           <p  className=\"font5 fontweight700 fontsizeE-9\">&nbsp;&nbsp;&nbsp;{x.review} </p>\r\n           <hr/>\r\n           </div>   \r\n            )}\r\n      \r\n      <div className=\"menu2-question col-12\">\r\n        <img className=\"float-left\" src=\"https://img.icons8.com/ios/40/000000/edit-chat-history.png\"/>\r\n        <input className=\"inputf2\" type=\"text\" name=\"review\" value={props.review}  onChange={props.handleChange} /><br/>\r\n        <button onClick={props.handlereviews} type=\"button\" className=\"btn btn-danger btn-sm fontsizeE-9\"><i className=\"fa fa-comments\" aria-hidden=\"true\"></i>&nbsp; keep a review </button>\r\n        </div>\r\n       \r\n       <style jsx >\r\n       {`.spam-text{\r\n           color:gray\r\n       }\r\n       .avatar {\r\n        vertical-align: middle;\r\n        width: 40px;\r\n        height: 40px;\r\n        border-radius: 50%;\r\n      }\r\n      .inputf2{\r\n        width: 80%;\r\n        color: darkblue;\r\n       }\r\n       `}\r\n       </style>\r\n        </div>\r\n    )\r\n}\r\nclass Index extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            item:{},\r\n            itemid:'',\r\n            question: '',\r\n            answer: '',\r\n            questiondata:[],\r\n            review:'',\r\n            reviewsdata:[],\r\n            allitems:[]\r\n    }\r\n\r\n    \r\n    \r\n    }\r\n\r\n    addtocart=(itemid,name)=>{\r\n        var data = Cookie.getJSON('faverite-item');\r\n        var jsonarray = []\r\n        \r\n        if(data){\r\n            if(!data.includes(itemid))\r\n            {jsonarray = [...data,itemid]\r\n            Cookie.set('faverite-item',jsonarray);\r\n            alert(`add ${name} to cart.`)\r\n            }else{\r\n            alert(`already added ${name} to cart.`) \r\n            }\r\n        }else{\r\n            jsonarray = [itemid]\r\n            Cookie.set('faverite-item',jsonarray);\r\n            alert(`add ${name} to cart.`)\r\n        }\r\n    \r\n     \r\n    }\r\n\r\n    handleChange = evt => {\r\n        // This triggers everytime the input is changed\r\n            this.setState({\r\n                [evt.target.name]: evt.target.value,\r\n            });\r\n            \r\n        };\r\n\r\n    \r\n    handlereviews=()=>{\r\n        const data = new FormData();\r\n        data.append('user', JSON.stringify(Cookie.getJSON('user')));\r\n        data.append('jsonbody', JSON.stringify(this.state));\r\n  \r\n        fetch('/api/reviewcreate',{\r\n            method: 'POST',\r\n            headers: {\r\n            },\r\n            body:data\r\n        \r\n            }\r\n        )\r\n        .then(response => {this.loadreviews(); return response.json(); } )\r\n        .then(data => { if(data!=undefined){this.setState({review:''});alert(data.msg);}})\r\n        .catch(error => console.log(error))\r\n    }\r\n     //ask question\r\n    handleaskquestion=()=>{\r\n        const data = new FormData();\r\n        data.append('user', JSON.stringify(Cookie.getJSON('user')));\r\n        data.append('jsonbody', JSON.stringify(this.state));\r\n  \r\n        fetch('/api/questioncreate',{\r\n            method: 'POST',\r\n            headers: {\r\n            },\r\n            body:data\r\n        \r\n            }\r\n        )\r\n        .then(response => {this.loadquestions(); return response.json(); } )\r\n        .then(data => { if(data!=undefined){ this.setState({question:''}); alert(data.msg);}})\r\n        .catch(error => console.log(error))\r\n\r\n       \r\n    }\r\n    //delete answer\r\n    removeansewer=(id)=>{\r\n        const data = new FormData();\r\n  \r\n        fetch('/api/removeansewer/'+id,{\r\n            method: 'PUT',\r\n            headers: {\r\n            },\r\n            body:data\r\n        \r\n            }\r\n        )\r\n        .then(response => {this.loadquestions(); return response.json(); } )\r\n        .then(data => { if(data!=undefined){this.setState({review:''});alert(data.msg);}})\r\n        .catch(error => console.log(error))\r\n    }\r\n    //give answer\r\n    handlegiveanswer=(id)=>{\r\n        var state =  {\r\n            answer: $(`#input-${id}`).val(),\r\n        }\r\n            const data = new FormData();\r\n            data.append('user', JSON.stringify(Cookie.getJSON('user')));\r\n            data.append('jsonbody', JSON.stringify(state));\r\n    \r\n            fetch(`/api/answertoqestion/${id}`,{\r\n                method: 'POST',\r\n                headers: {\r\n                },\r\n                body:data\r\n            \r\n                }\r\n            )\r\n            .then(response => {this.loadquestions(); return response.json(); } )\r\n            .then(data => {if(data!=undefined){this.setState({review:''});alert(data.msg);}})\r\n            .catch(error => console.log(error))\r\n\r\n       \r\n    }\r\n    /**side navbar */\r\n    showsidebar(){\r\n        this.refs.child.showSidebar();\r\n      }\r\n\r\n    componentDidMount(){\r\n        $(document).ready(function() {\r\n           \r\n          \r\n            function checkWidth() {\r\n                var windowwidth = $('.silde2image').width();\r\n                var windowheight = $(window).height();\r\n                    //if the window is greater than 440px wide then turn on jScrollPane..\r\n                  //  $('.div1').addClass('desktop')\r\n                  $('.silde2image').css({'max-height':windowwidth/3*2,'width':'100%'});\r\n                  $('.silde2image').parent().css({'height':windowwidth/3*2,'width':'100%','background': '#ffffff'});\r\n               \r\n            }\r\n            // Execute on load\r\n            checkWidth();\r\n            // Bind event listener\r\n            $(window).resize(checkWidth);\r\n\r\n    });\r\n        \r\n        this.loadquestions();\r\n        this.loadreviews();\r\n        this.loadCatagorybyname();\r\n\r\n    }\r\n    \r\n    loadquestions(){\r\n        fetch(`${Url}questions/${this.props.item._id}`)\r\n        .then(res=>{ return res.json();})\r\n        .then(data=>{\r\n            this.setState({\r\n                item:this.props.item,\r\n                itemid:this.props.item._id?this.props.item._id:'',\r\n                questiondata : data\r\n            })\r\n        })\r\n    }\r\n    loadreviews(){\r\n        fetch(`${Url}reviews/${this.props.item._id}`)\r\n        .then(res=>{ return res.json();})\r\n        .then(data=>{\r\n            this.setState({\r\n                reviewsdata : data\r\n            })\r\n        })\r\n    }\r\n    loadCatagorybyname(){\r\n        fetch(`${Url}catagerybyname/${this.props.item.categery}`)\r\n        .then(res=>{ return res.json();})\r\n        .then(data=>{\r\n            this.setState({\r\n                allitems : data\r\n            });\r\n        })\r\n    }\r\n   \r\n    render() { \r\n\r\n  \r\n    const sidenavconst = {topic : 'Items',topiclink:'All Items',sidenavlink:this.state.allitems,visible:this.props.error?false:true, suburl:'item'};\r\n//////////////\r\n\r\n          return ( \r\n            <Layout> \r\n\r\n        \r\n\r\n                 <SubNavbar sidenavconst={sidenavconst}/>\r\n                <br/>\r\n                {this.props.error?<Errorpage error={this.props.item} />: \r\n                <div className=\"container\">\r\n\r\n                <Head>\r\n                <title> {wesitename+' '+this.props.item.itemname+' '+this.props.item.shop[0].shopName+' '+this.props.item.shop[0].town}</title>\r\n                <meta property=\"og:url\"           content={WebUrl} />\r\n                <meta property=\"og:type\"          content=\"article\" />\r\n                <meta property=\"og:title\"         content={wesitename+' '+this.props.item.itemname} />\r\n                <meta property=\"og:description\"   content={this.props.item.content1} />\r\n                <meta property=\"og:image\"         content={ImageUrl+this.props.item.images[0]}/>\r\n                \r\n                <meta name=\"keywords\" content={this.props.Url.split('-').join(',')+',sri lanka'}></meta>\r\n                <meta name=\"description\" content={this.props.item.content1}></meta>\r\n                </Head>\r\n\r\n                <div className=\"row\">\r\n                <Imageside item={this.props.item} addtocart={(itemid,name)=>this.addtocart(itemid,name)}></Imageside>\r\n                <Contentside item={this.props.item} ></Contentside>\r\n                <QuestionSide shopUserid={this.props.item.user._id} removeansewer={(id)=>this.removeansewer(id)} questiondata={this.state.questiondata} question={this.state.question} answer={this.state.answer} handleaskquestion={this.handleaskquestion} handleChange={this.handleChange} handlegiveanswer={(id)=>this.handlegiveanswer(id)}></QuestionSide>\r\n                <ReviewSide reviewsdata={this.state.reviewsdata} review={this.state.review} handleChange={this.handleChange} handlereviews={this.handlereviews} />\r\n                \r\n                </div></div>}\r\n                \r\n                <br/>\r\n                <Footer/>\r\n                   </Layout>\r\n           );\r\n      }\r\n    \r\n}\r\n\r\nIndex.getInitialProps = async function(context) {\r\n    const { id,ide } = context.query;\r\n    const res = await fetch(`${Url}item/${id}?ide=${ide}`);\r\n\r\n     var  item = await res.json();\r\n     var error = false;\r\n     if(res.status!=200){\r\n      error = true ;\r\n    }\r\n\r\n    return {item,error}\r\n\r\n\r\n  }\r\n\r\n  export default Index;\r\n"]},"metadata":{},"sourceType":"module"}
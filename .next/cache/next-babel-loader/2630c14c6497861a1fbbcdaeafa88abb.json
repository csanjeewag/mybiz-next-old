{"ast":null,"code":"var __jsx = React.createElement;\n\n/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\"; // core components\n//import AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.js\";\n//import RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.js\";\n\nimport styles from \"./css/sidebarStyle.js\";\nconst useStyles = makeStyles(styles);\nexport default function Sidebar(props) {\n  const classes = useStyles(); // verifies if routeName is the one active (in browser input)\n\n  function activeRoute(routeName) {\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\n  }\n\n  const {\n    color,\n    logo,\n    image,\n    logoText,\n    routes\n  } = props;\n\n  var links = __jsx(List, {\n    className: classes.list\n  }, routes.map((prop, key) => {\n    var activePro = \" \";\n    var listItemClasses;\n\n    if (prop.path === \"/upgrade-to-pro\") {\n      activePro = classes.activePro + \" \";\n      listItemClasses = classNames({\n        [\" \" + classes[color]]: true\n      });\n    } else {\n      listItemClasses = classNames({\n        [\" \" + classes[color]]: activeRoute(prop.layout + prop.path)\n      });\n    }\n\n    const whiteFontClasses = classNames({\n      [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path)\n    });\n    return __jsx(NavLink, {\n      to: prop.layout + prop.path,\n      className: activePro + classes.item,\n      activeClassName: \"active\",\n      key: key\n    }, __jsx(ListItem, {\n      button: true,\n      className: classes.itemLink + listItemClasses\n    }, typeof prop.icon === \"string\" ? __jsx(Icon, {\n      className: classNames(classes.itemIcon, whiteFontClasses, {\n        [classes.itemIconRTL]: props.rtlActive\n      })\n    }, prop.icon) : __jsx(prop.icon, {\n      className: classNames(classes.itemIcon, whiteFontClasses, {\n        [classes.itemIconRTL]: props.rtlActive\n      })\n    }), __jsx(ListItemText, {\n      primary: props.rtlActive ? prop.rtlName : prop.name,\n      className: classNames(classes.itemText, whiteFontClasses, {\n        [classes.itemTextRTL]: props.rtlActive\n      }),\n      disableTypography: true\n    })));\n  }));\n\n  var brand = __jsx(\"div\", {\n    className: classes.logo\n  }, __jsx(\"a\", {\n    href: \"https://www.creative-tim.com?ref=mdr-sidebar\",\n    className: classNames(classes.logoLink, {\n      [classes.logoLinkRTL]: props.rtlActive\n    }),\n    target: \"_blank\"\n  }, __jsx(\"div\", {\n    className: classes.logoImage\n  }, __jsx(\"img\", {\n    src: logo,\n    alt: \"logo\",\n    className: classes.img\n  })), logoText));\n\n  return __jsx(\"div\", null, __jsx(Hidden, {\n    mdUp: true,\n    implementation: \"css\"\n  }, __jsx(Drawer, {\n    variant: \"temporary\",\n    anchor: props.rtlActive ? \"left\" : \"right\",\n    open: props.open,\n    classes: {\n      paper: classNames(classes.drawerPaper, {\n        [classes.drawerPaperRTL]: props.rtlActive\n      })\n    },\n    onClose: props.handleDrawerToggle,\n    ModalProps: {\n      keepMounted: true // Better open performance on mobile.\n\n    }\n  }, brand, __jsx(\"div\", {\n    className: classes.sidebarWrapper\n  }, props.rtlActive ? __jsx(\"div\", null) : __jsx(\"div\", null), links), image !== undefined ? __jsx(\"div\", {\n    className: classes.background,\n    style: {\n      backgroundImage: \"url(\" + image + \")\"\n    }\n  }) : null)), __jsx(Hidden, {\n    smDown: true,\n    implementation: \"css\"\n  }, __jsx(Drawer, {\n    anchor: props.rtlActive ? \"right\" : \"left\",\n    variant: \"permanent\",\n    open: true,\n    classes: {\n      paper: classNames(classes.drawerPaper, {\n        [classes.drawerPaperRTL]: props.rtlActive\n      })\n    }\n  }, brand, __jsx(\"div\", {\n    className: classes.sidebarWrapper\n  }, links), image !== undefined ? __jsx(\"div\", {\n    className: classes.background,\n    style: {\n      backgroundImage: \"url(\" + image + \")\"\n    }\n  }) : null)));\n}\nSidebar.propTypes = {\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n  logo: PropTypes.string,\n  image: PropTypes.string,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  open: PropTypes.bool\n};","map":{"version":3,"sources":["D:/Web-project/myapp/component/Sidebar.js"],"names":["React","classNames","PropTypes","NavLink","makeStyles","Drawer","Hidden","List","ListItem","ListItemText","Icon","styles","useStyles","Sidebar","props","classes","activeRoute","routeName","window","location","href","indexOf","color","logo","image","logoText","routes","links","list","map","prop","key","activePro","listItemClasses","path","layout","whiteFontClasses","whiteFont","item","itemLink","icon","itemIcon","itemIconRTL","rtlActive","rtlName","name","itemText","itemTextRTL","brand","logoLink","logoLinkRTL","logoImage","img","open","paper","drawerPaper","drawerPaperRTL","handleDrawerToggle","keepMounted","sidebarWrapper","undefined","background","backgroundImage","propTypes","bool","func","bgColor","oneOf","string","arrayOf","object"],"mappings":"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","sourcesContent":["/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\n// core components\n//import AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.js\";\n//import RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.js\";\n\nimport styles from \"./css/sidebarStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Sidebar(props) {\n  const classes = useStyles();\n  // verifies if routeName is the one active (in browser input)\n  function activeRoute(routeName) {\n    return window.location.href.indexOf(routeName) > -1 ? true : false;\n  }\n  const { color, logo, image, logoText, routes } = props;\n  var links = (\n    <List className={classes.list}>\n      {routes.map((prop, key) => {\n        var activePro = \" \";\n        var listItemClasses;\n        if (prop.path === \"/upgrade-to-pro\") {\n          activePro = classes.activePro + \" \";\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: true\n          });\n        } else {\n          listItemClasses = classNames({\n            [\" \" + classes[color]]: activeRoute(prop.layout + prop.path)\n          });\n        }\n        const whiteFontClasses = classNames({\n          [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path)\n        });\n        return (\n          <NavLink\n            to={prop.layout + prop.path}\n            className={activePro + classes.item}\n            activeClassName=\"active\"\n            key={key}\n          >\n            <ListItem button className={classes.itemLink + listItemClasses}>\n              {typeof prop.icon === \"string\" ? (\n                <Icon\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\n                    [classes.itemIconRTL]: props.rtlActive\n                  })}\n                >\n                  {prop.icon}\n                </Icon>\n              ) : (\n                <prop.icon\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\n                    [classes.itemIconRTL]: props.rtlActive\n                  })}\n                />\n              )}\n              <ListItemText\n                primary={props.rtlActive ? prop.rtlName : prop.name}\n                className={classNames(classes.itemText, whiteFontClasses, {\n                  [classes.itemTextRTL]: props.rtlActive\n                })}\n                disableTypography={true}\n              />\n            </ListItem>\n          </NavLink>\n        );\n      })}\n    </List>\n  );\n  var brand = (\n    <div className={classes.logo}>\n      <a\n        href=\"https://www.creative-tim.com?ref=mdr-sidebar\"\n        className={classNames(classes.logoLink, {\n          [classes.logoLinkRTL]: props.rtlActive\n        })}\n        target=\"_blank\"\n      >\n        <div className={classes.logoImage}>\n          <img src={logo} alt=\"logo\" className={classes.img} />\n        </div>\n        {logoText}\n      </a>\n    </div>\n  );\n  return (\n    <div>\n      <Hidden mdUp implementation=\"css\">\n        <Drawer\n          variant=\"temporary\"\n          anchor={props.rtlActive ? \"left\" : \"right\"}\n          open={props.open}\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive\n            })\n          }}\n          onClose={props.handleDrawerToggle}\n          ModalProps={{\n            keepMounted: true // Better open performance on mobile.\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>\n            {props.rtlActive ? <div /> : <div />}\n            {links}\n          </div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n      <Hidden smDown implementation=\"css\">\n        <Drawer\n          anchor={props.rtlActive ? \"right\" : \"left\"}\n          variant=\"permanent\"\n          open\n          classes={{\n            paper: classNames(classes.drawerPaper, {\n              [classes.drawerPaperRTL]: props.rtlActive\n            })\n          }}\n        >\n          {brand}\n          <div className={classes.sidebarWrapper}>{links}</div>\n          {image !== undefined ? (\n            <div\n              className={classes.background}\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\n            />\n          ) : null}\n        </Drawer>\n      </Hidden>\n    </div>\n  );\n}\n\nSidebar.propTypes = {\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n  logo: PropTypes.string,\n  image: PropTypes.string,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  open: PropTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}
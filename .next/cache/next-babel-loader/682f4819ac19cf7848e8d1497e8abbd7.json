{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from './../../layouts/MainLayout';\nimport Categeryitem from '../../components/Categeryitem';\nimport SubNavBar from './../../layouts/SubNavbar';\nimport Slide from './../../components/Slide1';\nimport Footer from './../../components/Footer';\nimport { Url } from './../../constant/main';\n\nvar Index = /*#__PURE__*/function (_Component) {\n  _inherits(Index, _Component);\n\n  function Index() {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this));\n    _this.state = {\n      catageries: []\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        catageries: this.props.allcatagery\n      });\n    }\n  }, {\n    key: \"showsidebar\",\n    value: function showsidebar() {\n      this.refs.child.showSidebar();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var sidenavconst = {\n        topic: 'Categeries',\n        topiclink: 'all categories',\n        suburl: '/catagery/',\n        sidenavlink: this.props.allcatagery,\n        visible: true\n      }; //////////////\n\n      return __jsx(Layout, null, __jsx(SubNavBar, {\n        sidenavconst: sidenavconst\n      }), __jsx(Slide, {\n        catagery: this.props.catagery[0]\n      }), __jsx(Categeryitem, {\n        catageries: this.props.items,\n        topic: this.props.itemname\n      }), __jsx(Footer, null));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nIndex.getInitialProps = function _callee(context) {\n  var id, res, rescatagery, resallcatageries, items, catagery, allcatagery, error;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(Url, \"catagerybyname/\").concat(id)));\n\n        case 3:\n          res = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(Url, \"typebyname/\").concat(id)));\n\n        case 6:\n          rescatagery = _context.sent;\n          _context.next = 9;\n          return _regeneratorRuntime.awrap(fetch(\"\".concat(Url, \"types\")));\n\n        case 9:\n          resallcatageries = _context.sent;\n          _context.next = 12;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 12:\n          items = _context.sent;\n          _context.next = 15;\n          return _regeneratorRuntime.awrap(rescatagery.json());\n\n        case 15:\n          catagery = _context.sent;\n          _context.next = 18;\n          return _regeneratorRuntime.awrap(resallcatageries.json());\n\n        case 18:\n          allcatagery = _context.sent;\n          error = false;\n\n          if (res.status != 200 || rescatagery.status != 200) {\n            error = true;\n          }\n\n          return _context.abrupt(\"return\", {\n            itemname: id,\n            items: items,\n            catagery: catagery,\n            allcatagery: allcatagery,\n            error: error\n          });\n\n        case 22:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};\n\nexport default Index;","map":{"version":3,"sources":["D:/Web-project/myapp/pages/catagery/[id].js"],"names":["React","Component","Layout","Categeryitem","SubNavBar","Slide","Footer","Url","Index","state","catageries","setState","props","allcatagery","refs","child","showSidebar","sidenavconst","topic","topiclink","suburl","sidenavlink","visible","catagery","items","itemname","getInitialProps","context","id","query","fetch","res","rescatagery","resallcatageries","json","error","status"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,KAAP,MAAmB,2BAAnB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAAQC,GAAR,QAAkB,uBAAlB;;IAEMC,K;;;AAEF,mBAAc;AAAA;;AAAA;;AACV;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAG;AADJ,KAAb;AAFU;AAMb;;;;wCACkB;AACf,WAAKC,QAAL,CAAc;AACVD,QAAAA,UAAU,EAAC,KAAKE,KAAL,CAAWC;AADZ,OAAd;AAGH;;;kCAEY;AACT,WAAKC,IAAL,CAAUC,KAAV,CAAgBC,WAAhB;AACD;;;6BAEM;AAED,UAAMC,YAAY,GAAG;AAACC,QAAAA,KAAK,EAAG,YAAT;AAAsBC,QAAAA,SAAS,EAAC,gBAAhC;AAAiDC,QAAAA,MAAM,EAAC,YAAxD;AAAsEC,QAAAA,WAAW,EAAC,KAAKT,KAAL,CAAWC,WAA7F;AAAyGS,QAAAA,OAAO,EAAC;AAAjH,OAArB,CAFC,CAGL;;AACE,aACE,MAAC,MAAD,QACI,MAAC,SAAD;AAAW,QAAA,YAAY,EAAEL;AAAzB,QADJ,EAIC,MAAC,KAAD;AAAO,QAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWW,QAAX,CAAoB,CAApB;AAAjB,QAJD,EAKI,MAAC,YAAD;AAAe,QAAA,UAAU,EAAE,KAAKX,KAAL,CAAWY,KAAtC;AAA6C,QAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWa;AAA/D,QALJ,EAMA,MAAC,MAAD,OANA,CADF;AAUH;;;;EAjCaxB,S;;AAqCpBO,KAAK,CAACkB,eAAN,GAAwB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACZC,UAAAA,EADY,GACLD,OAAO,CAACE,KADH,CACZD,EADY;AAAA;AAAA,2CAGFE,KAAK,WAAIvB,GAAJ,4BAAyBqB,EAAzB,EAHH;;AAAA;AAGdG,UAAAA,GAHc;AAAA;AAAA,2CAIMD,KAAK,WAAIvB,GAAJ,wBAAqBqB,EAArB,EAJX;;AAAA;AAIdI,UAAAA,WAJc;AAAA;AAAA,2CAKWF,KAAK,WAAIvB,GAAJ,WALhB;;AAAA;AAKd0B,UAAAA,gBALc;AAAA;AAAA,2CAODF,GAAG,CAACG,IAAJ,EAPC;;AAAA;AAOfV,UAAAA,KAPe;AAAA;AAAA,2CAQCQ,WAAW,CAACE,IAAZ,EARD;;AAAA;AAQhBX,UAAAA,QARgB;AAAA;AAAA,2CASIU,gBAAgB,CAACC,IAAjB,EATJ;;AAAA;AAShBrB,UAAAA,WATgB;AAWhBsB,UAAAA,KAXgB,GAWR,KAXQ;;AAYpB,cAAGJ,GAAG,CAACK,MAAJ,IAAY,GAAZ,IAAiBJ,WAAW,CAACI,MAAZ,IAAoB,GAAxC,EAA6C;AACzCD,YAAAA,KAAK,GAAG,IAAR;AACJ;;AAdoB,2CAgBb;AAACV,YAAAA,QAAQ,EAACG,EAAV;AAAaJ,YAAAA,KAAK,EAALA,KAAb;AAAmBD,YAAAA,QAAQ,EAARA,QAAnB;AAA4BV,YAAAA,WAAW,EAAXA,WAA5B;AAAwCsB,YAAAA,KAAK,EAALA;AAAxC,WAhBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAqBA,eAAe3B,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from './../../layouts/MainLayout';\r\nimport Categeryitem from '../../components/Categeryitem';\r\nimport SubNavBar from './../../layouts/SubNavbar';\r\nimport Slide from  './../../components/Slide1';\r\nimport Footer from './../../components/Footer';\r\nimport {Url} from './../../constant/main';\r\n\r\nclass Index extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            catageries : []\r\n        }\r\n\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            catageries:this.props.allcatagery\r\n        })\r\n    }\r\n\r\n    showsidebar(){\r\n        this.refs.child.showSidebar();\r\n      }\r\n    \r\n    render() { \r\n        \r\n            const sidenavconst = {topic : 'Categeries',topiclink:'all categories',suburl:'/catagery/', sidenavlink:this.props.allcatagery,visible:true};\r\n        //////////////\r\n          return ( \r\n            <Layout>\r\n                <SubNavBar sidenavconst={sidenavconst}/>\r\n                \r\n\r\n             <Slide catagery={this.props.catagery[0]} ></Slide>\r\n                <Categeryitem  catageries={this.props.items} topic={this.props.itemname}></Categeryitem>\r\n            <Footer/>\r\n                   </Layout>\r\n           );\r\n      }\r\n    \r\n}\r\n\r\nIndex.getInitialProps = async function(context) {\r\n    const { id } = context.query;\r\n    \r\n    const res = await fetch(`${Url}catagerybyname/${id}`);\r\n    const rescatagery = await fetch(`${Url}typebyname/${id}`);\r\n    const resallcatageries = await fetch(`${Url}types`);\r\n\r\n    var  items = await res.json();\r\n    var catagery = await rescatagery.json();\r\n    var allcatagery = await resallcatageries.json();\r\n\r\n    var error = false;\r\n    if(res.status!=200||rescatagery.status!=200 ){\r\n        error = true ;\r\n   }\r\n\r\n    return {itemname:id,items,catagery,allcatagery,error}\r\n\r\n\r\n  }\r\n\r\nexport default Index; \r\n"]},"metadata":{},"sourceType":"module"}
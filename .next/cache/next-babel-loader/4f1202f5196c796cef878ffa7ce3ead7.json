{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form } from 'semantic-ui-react';\nimport { connect } from 'react-redux';\nimport { addPhotoToUser } from './helpers.js';\n\nclass PicUploadNoCrop extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"handleFile\", e => {\n      this.setState({\n        photoFile: e.target.files[0]\n      });\n      const file = e.target.files[0];\n      const fileReader = new FileReader();\n\n      fileReader.onloadend = () => {\n        this.setState({\n          photoFile: file,\n          photoUrl: fileReader.result\n        });\n      };\n\n      if (file) {\n        fileReader.readAsDataURL(file);\n      }\n    });\n\n    _defineProperty(this, \"handleSubmit\", e => {\n      e.preventDefault();\n      const formData = new FormData();\n      formData.append('user[id]', this.props.currentUser.id);\n      formData.append('user[profile_pic]', this.state.photoFile);\n      addPhotoToUser(this.props.currentUser, formData);\n    });\n\n    this.state = {\n      photoFile: null,\n      photoUrl: null\n    };\n  }\n\n  render() {\n    const preview = this.state.photoUrl ? __jsx(\"img\", {\n      src: this.state.photoUrl,\n      alt: \"preview\"\n    }) : null;\n    return __jsx(Form, {\n      onSubmit: this.handleSubmit\n    }, __jsx(\"input\", {\n      type: \"file\",\n      id: \"profile_pic\",\n      value: this.state.profile_pic,\n      onChange: this.handleFile\n    }), preview, __jsx(\"button\", null, \"save\"));\n  }\n\n}\n\nconst mapSTP = state => {\n  return {\n    currentUser: state.currentUser\n  };\n};\n\nexport default connect(mapSTP)(PicUploadNoCrop);","map":{"version":3,"sources":["D:/Web-project/myapp/pages/menu5.js"],"names":["React","Component","Form","connect","addPhotoToUser","PicUploadNoCrop","constructor","e","setState","photoFile","target","files","file","fileReader","FileReader","onloadend","photoUrl","result","readAsDataURL","preventDefault","formData","FormData","append","props","currentUser","id","state","render","preview","handleSubmit","profile_pic","handleFile","mapSTP"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,cAA/B;;AAEA,MAAMC,eAAN,SAA8BJ,SAA9B,CAAwC;AAEpCK,EAAAA,WAAW,GAAG;AACV;;AADU,wCAQDC,CAAC,IAAI;AACd,WAAKC,QAAL,CAAc;AAACC,QAAAA,SAAS,EAAEF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf;AAAZ,OAAd;AACA,YAAMC,IAAI,GAAGL,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,YAAME,UAAU,GAAG,IAAIC,UAAJ,EAAnB;;AACAD,MAAAA,UAAU,CAACE,SAAX,GAAuB,MAAM;AACzB,aAAKP,QAAL,CAAc;AAACC,UAAAA,SAAS,EAAEG,IAAZ;AAAkBI,UAAAA,QAAQ,EAAEH,UAAU,CAACI;AAAvC,SAAd;AACH,OAFD;;AAIA,UAAGL,IAAH,EAAS;AACLC,QAAAA,UAAU,CAACK,aAAX,CAAyBN,IAAzB;AACH;AACJ,KAnBa;;AAAA,0CAqBCL,CAAC,IAAI;AAChBA,MAAAA,CAAC,CAACY,cAAF;AACA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA4B,KAAKC,KAAL,CAAWC,WAAX,CAAuBC,EAAnD;AACAL,MAAAA,QAAQ,CAACE,MAAT,CAAgB,mBAAhB,EAAqC,KAAKI,KAAL,CAAWjB,SAAhD;AACAL,MAAAA,cAAc,CAAC,KAAKmB,KAAL,CAAWC,WAAZ,EAAyBJ,QAAzB,CAAd;AACH,KA3Ba;;AAEV,SAAKM,KAAL,GAAa;AACTjB,MAAAA,SAAS,EAAE,IADF;AAETO,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAuBDW,EAAAA,MAAM,GAAG;AACL,UAAMC,OAAO,GAAG,KAAKF,KAAL,CAAWV,QAAX,GAAsB;AAAK,MAAA,GAAG,EAAE,KAAKU,KAAL,CAAWV,QAArB;AAA+B,MAAA,GAAG,EAAC;AAAnC,MAAtB,GAAuE,IAAvF;AAEA,WACI,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKa;AAArB,OACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,aAAtB;AAAoC,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWI,WAAtD;AACA,MAAA,QAAQ,EAAE,KAAKC;AADf,MADJ,EAGKH,OAHL,EAII,6BAJJ,CADJ;AAQH;;AA1CmC;;AA6CxC,MAAMI,MAAM,GAAGN,KAAK,IAAI;AACpB,SAAO;AAACF,IAAAA,WAAW,EAAEE,KAAK,CAACF;AAApB,GAAP;AACH,CAFD;;AAIA,eAAerB,OAAO,CAAC6B,MAAD,CAAP,CAAgB3B,eAAhB,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { Form } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux'\r\nimport { addPhotoToUser } from './helpers.js'\r\n\r\nclass PicUploadNoCrop extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            photoFile: null,\r\n            photoUrl: null\r\n        }\r\n    }\r\n\r\n    handleFile = e => {\r\n        this.setState({photoFile: e.target.files[0]})\r\n        const file = e.target.files[0]\r\n        const fileReader = new FileReader()\r\n        fileReader.onloadend = () => {\r\n            this.setState({photoFile: file, photoUrl: fileReader.result})\r\n        }   \r\n\r\n        if(file) {\r\n            fileReader.readAsDataURL(file)\r\n        }\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        const formData = new FormData()\r\n        formData.append('user[id]', this.props.currentUser.id)\r\n        formData.append('user[profile_pic]', this.state.photoFile)\r\n        addPhotoToUser(this.props.currentUser, formData)\r\n    }\r\n\r\n    render() {\r\n        const preview = this.state.photoUrl ? <img src={this.state.photoUrl} alt='preview'/> : null\r\n    \r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <input type='file' id='profile_pic' value={this.state.profile_pic} \r\n                onChange={this.handleFile} />\r\n                {preview}\r\n                <button>save</button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapSTP = state => {\r\n    return {currentUser: state.currentUser}\r\n}\r\n\r\nexport default connect(mapSTP)(PicUploadNoCrop)"]},"metadata":{},"sourceType":"module"}
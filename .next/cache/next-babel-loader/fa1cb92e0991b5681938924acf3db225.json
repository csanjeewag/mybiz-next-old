{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Head from 'next/head';\nimport Layout from './../layouts/MainLayout';\nimport Allcatagery from './../components/Allcatagery';\nimport NavBar from './../layouts/Navbar';\nimport TopSlide from '../components/Topslide';\nimport FilterItem from './../layouts/filterItem';\nimport Footer from './../components/Footer';\nimport { Url, web, WebUrl } from './../constant/main';\nimport fetch from 'isomorphic-unfetch';\n\nclass Index extends Component {\n  render() {\n    return __jsx(Layout, null, __jsx(Head, null, __jsx(\"title\", null, \" \", web.wetopic), __jsx(\"meta\", {\n      property: \"og:url\",\n      content: WebUrl\n    }), __jsx(\"meta\", {\n      property: \"og:type\",\n      content: \"article\"\n    }), __jsx(\"meta\", {\n      property: \"og:title\",\n      content: web.wetopic\n    }), __jsx(\"meta\", {\n      property: \"og:description\",\n      content: web.webContent\n    }), __jsx(\"meta\", {\n      property: \"og:image\",\n      content: web.webImage\n    }), __jsx(\"meta\", {\n      name: \"keywords\",\n      content: web.webKeyword\n    }), __jsx(\"meta\", {\n      name: \"description\",\n      content: web.webContent\n    })), __jsx(NavBar, null), __jsx(TopSlide, null), __jsx(FilterItem, null), __jsx(Allcatagery, {\n      catageries: this.props.types,\n      topic: \"categories\"\n    }), __jsx(Footer, null));\n  }\n\n}\n\nIndex.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const res = await fetch(`${Url}types`);\n  var types = await res.json();\n  var error = false;\n\n  if (res.status != 200) {\n    error = true;\n  }\n\n  return {\n    itemname: id,\n    types,\n    error\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["D:/Web-project/onshopLK/mybiz-next/pages/index.js"],"names":["React","Component","Head","Layout","Allcatagery","NavBar","TopSlide","FilterItem","Footer","Url","web","WebUrl","fetch","Index","render","wetopic","webContent","webImage","webKeyword","props","types","getInitialProps","context","id","query","res","json","error","status","itemname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAAQC,GAAR,EAAYC,GAAZ,EAAgBC,MAAhB,QAA6B,oBAA7B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AACA,MAAMC,KAAN,SAAoBZ,SAApB,CAA8B;AAK1Ba,EAAAA,MAAM,GAAG;AAGH,WACC,MAAC,MAAD,QACQ,MAAC,IAAD,QACH,0BAASJ,GAAG,CAACK,OAAb,CADG,EAEH;AAAM,MAAA,QAAQ,EAAC,QAAf;AAAkC,MAAA,OAAO,EAAEJ;AAA3C,MAFG,EAGH;AAAM,MAAA,QAAQ,EAAC,SAAf;AAAkC,MAAA,OAAO,EAAC;AAA1C,MAHG,EAIH;AAAM,MAAA,QAAQ,EAAC,UAAf;AAAkC,MAAA,OAAO,EAAED,GAAG,CAACK;AAA/C,MAJG,EAKH;AAAM,MAAA,QAAQ,EAAC,gBAAf;AAAkC,MAAA,OAAO,EAAEL,GAAG,CAACM;AAA/C,MALG,EAMH;AAAM,MAAA,QAAQ,EAAC,UAAf;AAAkC,MAAA,OAAO,EAAEN,GAAG,CAACO;AAA/C,MANG,EAQH;AAAM,MAAA,IAAI,EAAC,UAAX;AAAsB,MAAA,OAAO,EAAEP,GAAG,CAACQ;AAAnC,MARG,EASH;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAER,GAAG,CAACM;AAAtC,MATG,CADR,EAaF,MAAC,MAAD,OAbE,EAcH,MAAC,QAAD,OAdG,EAeH,MAAC,UAAD,OAfG,EAgBG,MAAC,WAAD;AAAa,MAAA,UAAU,EAAE,KAAKG,KAAL,CAAWC,KAApC;AAA2C,MAAA,KAAK,EAAC;AAAjD,MAhBH,EAmBN,MAAC,MAAD,OAnBM,CADD;AAwBH;;AAhCuB;;AAoC9BP,KAAK,CAACQ,eAAN,GAAwB,gBAAeC,OAAf,EAAwB;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,KAAvB;AAEA,QAAMC,GAAG,GAAG,MAAMb,KAAK,CAAE,GAAEH,GAAI,OAAR,CAAvB;AACA,MAAKW,KAAK,GAAG,MAAMK,GAAG,CAACC,IAAJ,EAAnB;AACA,MAAIC,KAAK,GAAG,KAAZ;;AACA,MAAGF,GAAG,CAACG,MAAJ,IAAY,GAAf,EAAmB;AACfD,IAAAA,KAAK,GAAG,IAAR;AACJ;;AACA,SAAO;AAACE,IAAAA,QAAQ,EAACN,EAAV;AAAaH,IAAAA,KAAb;AAAmBO,IAAAA;AAAnB,GAAP;AAGD,CAZH;;AAcA,eAAed,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Head from 'next/head';\r\nimport Layout from './../layouts/MainLayout';\r\nimport Allcatagery from './../components/Allcatagery';\r\nimport NavBar from './../layouts/Navbar';\r\nimport TopSlide from '../components/Topslide';\r\nimport FilterItem from './../layouts/filterItem';\r\nimport Footer from './../components/Footer';\r\nimport {Url,web,WebUrl} from './../constant/main';\r\nimport fetch from 'isomorphic-unfetch';\r\nclass Index extends Component {\r\n\r\n\r\n\r\n    \r\n    render() { \r\n        \r\n\r\n          return ( \r\n           <Layout>\r\n                   <Head>\r\n                <title> {web.wetopic}</title>\r\n                <meta property=\"og:url\"           content={WebUrl} />\r\n                <meta property=\"og:type\"          content=\"article\" />\r\n                <meta property=\"og:title\"         content={web.wetopic} />\r\n                <meta property=\"og:description\"   content={web.webContent} />\r\n                <meta property=\"og:image\"         content={web.webImage}/>\r\n                \r\n                <meta name=\"keywords\" content={web.webKeyword}></meta>\r\n                <meta name=\"description\" content={web.webContent}></meta>\r\n                </Head>\r\n\r\n         <NavBar ></NavBar>\r\n        <TopSlide></TopSlide>\r\n        <FilterItem></FilterItem>\r\n              <Allcatagery catageries={this.props.types} topic=\"categories\" ></Allcatagery>\r\n\r\n\r\n     <Footer></Footer>\r\n  \r\n                  </Layout>\r\n           );\r\n      }\r\n    \r\n}\r\n\r\nIndex.getInitialProps = async function(context) {\r\n    const { id } = context.query;\r\n    \r\n    const res = await fetch(`${Url}types`);\r\n    var  types = await res.json();\r\n    var error = false;\r\n    if(res.status!=200){\r\n        error = true ;\r\n   }\r\n    return {itemname:id,types,error}\r\n\r\n\r\n  }\r\n\r\nexport default Index; \r\n"]},"metadata":{},"sourceType":"module"}
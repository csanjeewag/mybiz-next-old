{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Layout from './../../layouts/MainLayout';\nimport Allcatagery from '../../components/Allshops';\nimport SubNavBar from './../../layouts/SubNavbar';\nimport Slide from './../../components/Slide1';\nimport Footer from './../../components/Footer';\nimport { Url } from './../../constant/main';\n\nclass Index extends Component {\n  constructor() {\n    super();\n    this.state = {\n      catageries: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      catageries: this.props.allcatagery\n    });\n  }\n\n  showsidebar() {\n    this.refs.child.showSidebar();\n  }\n\n  render() {\n    const sidenavconst = {\n      topic: 'Categeries',\n      topiclink: 'all categories',\n      sidenavlink: this.props.allcatagery,\n      visible: true\n    }; //////////////\n\n    return __jsx(Layout, null, __jsx(SubNavBar, {\n      sidenavconst: sidenavconst\n    }), __jsx(Allcatagery, {\n      allshops: this.props.allshops,\n      topic: \"shop\"\n    }), __jsx(Footer, null));\n  }\n\n}\n\nIndex.getInitialProps = async function (context) {\n  const {\n    id\n  } = context.query;\n  const resallshop = await fetch(`${Url}allshop`);\n  const res = await fetch(`${Url}catagerybyname/${id}`);\n  const rescatagery = await fetch(`${Url}typebyname/${id}`);\n  const resallcatageries = await fetch(`${Url}types`);\n  var allshops = await resallshop.json();\n  var catagery = await rescatagery.json();\n  var allcatagery = await resallcatageries.json();\n  var error = false;\n\n  if (res.status != 200 || rescatagery.status != 200) {\n    error = true;\n  }\n\n  return {\n    itemname: id,\n    catagery,\n    allcatagery,\n    allshops,\n    error\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["D:/Web-project/myapp/pages/shop/[id].js"],"names":["React","Component","Layout","Allcatagery","SubNavBar","Slide","Footer","Url","Index","constructor","state","catageries","componentDidMount","setState","props","allcatagery","showsidebar","refs","child","showSidebar","render","sidenavconst","topic","topiclink","sidenavlink","visible","allshops","getInitialProps","context","id","query","resallshop","fetch","res","rescatagery","resallcatageries","json","catagery","error","status","itemname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,KAAP,MAAmB,2BAAnB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAAQC,GAAR,QAAkB,uBAAlB;;AAEA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAE1BQ,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAG;AADJ,KAAb;AAIH;;AACDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,QAAL,CAAc;AACVF,MAAAA,UAAU,EAAC,KAAKG,KAAL,CAAWC;AADZ,KAAd;AAGH;;AAEDC,EAAAA,WAAW,GAAE;AACT,SAAKC,IAAL,CAAUC,KAAV,CAAgBC,WAAhB;AACD;;AAEHC,EAAAA,MAAM,GAAG;AAGD,UAAMC,YAAY,GAAG;AAACC,MAAAA,KAAK,EAAG,YAAT;AAAsBC,MAAAA,SAAS,EAAC,gBAAhC;AAAiDC,MAAAA,WAAW,EAAC,KAAKV,KAAL,CAAWC,WAAxE;AAAoFU,MAAAA,OAAO,EAAC;AAA5F,KAArB,CAHC,CAIL;;AACE,WACE,MAAC,MAAD,QACI,MAAC,SAAD;AAAW,MAAA,YAAY,EAAEJ;AAAzB,MADJ,EAKI,MAAC,WAAD;AAAc,MAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWY,QAAnC;AAA6C,MAAA,KAAK,EAAC;AAAnD,MALJ,EAMA,MAAC,MAAD,OANA,CADF;AAUH;;AAlCuB;;AAsC9BlB,KAAK,CAACmB,eAAN,GAAwB,gBAAeC,OAAf,EAAwB;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAASD,OAAO,CAACE,KAAvB;AACA,QAAMC,UAAU,GAAG,MAAMC,KAAK,CAAE,GAAEzB,GAAI,SAAR,CAA9B;AACA,QAAM0B,GAAG,GAAG,MAAMD,KAAK,CAAE,GAAEzB,GAAI,kBAAiBsB,EAAG,EAA5B,CAAvB;AACA,QAAMK,WAAW,GAAG,MAAMF,KAAK,CAAE,GAAEzB,GAAI,cAAasB,EAAG,EAAxB,CAA/B;AACA,QAAMM,gBAAgB,GAAG,MAAMH,KAAK,CAAE,GAAEzB,GAAI,OAAR,CAApC;AAEA,MAAImB,QAAQ,GAAG,MAAMK,UAAU,CAACK,IAAX,EAArB;AACA,MAAIC,QAAQ,GAAG,MAAMH,WAAW,CAACE,IAAZ,EAArB;AACA,MAAIrB,WAAW,GAAG,MAAMoB,gBAAgB,CAACC,IAAjB,EAAxB;AAEA,MAAIE,KAAK,GAAG,KAAZ;;AACA,MAAGL,GAAG,CAACM,MAAJ,IAAY,GAAZ,IAAiBL,WAAW,CAACK,MAAZ,IAAoB,GAAxC,EAA6C;AACzCD,IAAAA,KAAK,GAAG,IAAR;AACJ;;AAEA,SAAO;AAACE,IAAAA,QAAQ,EAACX,EAAV;AAAaQ,IAAAA,QAAb;AAAsBtB,IAAAA,WAAtB;AAAkCW,IAAAA,QAAlC;AAA2CY,IAAAA;AAA3C,GAAP;AAGD,CAnBH;;AAqBA,eAAe9B,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Layout from './../../layouts/MainLayout';\r\nimport Allcatagery from '../../components/Allshops';\r\nimport SubNavBar from './../../layouts/SubNavbar';\r\nimport Slide from  './../../components/Slide1';\r\nimport Footer from './../../components/Footer';\r\nimport {Url} from './../../constant/main';\r\n\r\nclass Index extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            catageries : []\r\n        }\r\n\r\n    }\r\n    componentDidMount(){\r\n        this.setState({\r\n            catageries:this.props.allcatagery\r\n        })\r\n    }\r\n\r\n    showsidebar(){\r\n        this.refs.child.showSidebar();\r\n      }\r\n    \r\n    render() { \r\n        \r\n\r\n            const sidenavconst = {topic : 'Categeries',topiclink:'all categories',sidenavlink:this.props.allcatagery,visible:true};\r\n        //////////////\r\n          return ( \r\n            <Layout>\r\n                <SubNavBar sidenavconst={sidenavconst}/>\r\n                \r\n\r\n             {/*<Slide catagery={this.props.catagery[0]} ></Slide>*/}\r\n                <Allcatagery  allshops={this.props.allshops} topic='shop'></Allcatagery>\r\n            <Footer/>\r\n                   </Layout>\r\n           );\r\n      }\r\n    \r\n}\r\n\r\nIndex.getInitialProps = async function(context) {\r\n    const { id } = context.query;\r\n    const resallshop = await fetch(`${Url}allshop`);\r\n    const res = await fetch(`${Url}catagerybyname/${id}`);\r\n    const rescatagery = await fetch(`${Url}typebyname/${id}`);\r\n    const resallcatageries = await fetch(`${Url}types`);\r\n\r\n    var allshops = await resallshop.json();\r\n    var catagery = await rescatagery.json();\r\n    var allcatagery = await resallcatageries.json();\r\n\r\n    var error = false;\r\n    if(res.status!=200||rescatagery.status!=200 ){\r\n        error = true ;\r\n   }\r\n\r\n    return {itemname:id,catagery,allcatagery,allshops,error}\r\n\r\n\r\n  }\r\n\r\nexport default Index; \r\n"]},"metadata":{},"sourceType":"module"}